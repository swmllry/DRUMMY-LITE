{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ConnectionPoolClearedEvent = exports.ConnectionCheckedInEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolMonitoringEvent = void 0;\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    this.time = new Date();\n    this.address = pool.address;\n  }\n\n}\n\nexports.ConnectionPoolMonitoringEvent = ConnectionPoolMonitoringEvent;\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\n\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n    this.options = pool.options;\n  }\n\n}\n\nexports.ConnectionPoolCreatedEvent = ConnectionPoolCreatedEvent;\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\n\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n  }\n\n}\n\nexports.ConnectionPoolClosedEvent = ConnectionPoolClosedEvent;\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\n\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCreatedEvent = ConnectionCreatedEvent;\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\n\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionReadyEvent = ConnectionReadyEvent;\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\n\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection, reason) {\n    super(pool);\n    this.connectionId = connection.id;\n    this.reason = reason || 'unknown';\n    this.serviceId = connection.serviceId;\n  }\n\n}\n\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\n\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool) {\n    super(pool);\n  }\n\n}\n\nexports.ConnectionCheckOutStartedEvent = ConnectionCheckOutStartedEvent;\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\n\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, reason) {\n    super(pool);\n    this.reason = reason;\n  }\n\n}\n\nexports.ConnectionCheckOutFailedEvent = ConnectionCheckOutFailedEvent;\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCheckedOutEvent = ConnectionCheckedOutEvent;\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\n\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, connection) {\n    super(pool);\n    this.connectionId = connection.id;\n  }\n\n}\n\nexports.ConnectionCheckedInEvent = ConnectionCheckedInEvent;\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\n\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n  /** @internal */\n  constructor(pool, serviceId) {\n    super(pool);\n    this.serviceId = serviceId;\n  }\n\n}\n\nexports.ConnectionPoolClearedEvent = ConnectionPoolClearedEvent;","map":{"version":3,"sources":["../../src/cmap/connection_pool_events.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConnectionPoolClearedEvent = exports.ConnectionCheckedInEvent = exports.ConnectionCheckedOutEvent = exports.ConnectionCheckOutFailedEvent = exports.ConnectionCheckOutStartedEvent = exports.ConnectionClosedEvent = exports.ConnectionReadyEvent = exports.ConnectionCreatedEvent = exports.ConnectionPoolClosedEvent = exports.ConnectionPoolCreatedEvent = exports.ConnectionPoolMonitoringEvent = void 0;\n/**\n * The base export class for all monitoring events published from the connection pool\n * @public\n * @category Event\n */\nclass ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        this.time = new Date();\n        this.address = pool.address;\n    }\n}\nexports.ConnectionPoolMonitoringEvent = ConnectionPoolMonitoringEvent;\n/**\n * An event published when a connection pool is created\n * @public\n * @category Event\n */\nclass ConnectionPoolCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n        this.options = pool.options;\n    }\n}\nexports.ConnectionPoolCreatedEvent = ConnectionPoolCreatedEvent;\n/**\n * An event published when a connection pool is closed\n * @public\n * @category Event\n */\nclass ConnectionPoolClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionPoolClosedEvent = ConnectionPoolClosedEvent;\n/**\n * An event published when a connection pool creates a new connection\n * @public\n * @category Event\n */\nclass ConnectionCreatedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCreatedEvent = ConnectionCreatedEvent;\n/**\n * An event published when a connection is ready for use\n * @public\n * @category Event\n */\nclass ConnectionReadyEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionReadyEvent = ConnectionReadyEvent;\n/**\n * An event published when a connection is closed\n * @public\n * @category Event\n */\nclass ConnectionClosedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection, reason) {\n        super(pool);\n        this.connectionId = connection.id;\n        this.reason = reason || 'unknown';\n        this.serviceId = connection.serviceId;\n    }\n}\nexports.ConnectionClosedEvent = ConnectionClosedEvent;\n/**\n * An event published when a request to check a connection out begins\n * @public\n * @category Event\n */\nclass ConnectionCheckOutStartedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool) {\n        super(pool);\n    }\n}\nexports.ConnectionCheckOutStartedEvent = ConnectionCheckOutStartedEvent;\n/**\n * An event published when a request to check a connection out fails\n * @public\n * @category Event\n */\nclass ConnectionCheckOutFailedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, reason) {\n        super(pool);\n        this.reason = reason;\n    }\n}\nexports.ConnectionCheckOutFailedEvent = ConnectionCheckOutFailedEvent;\n/**\n * An event published when a connection is checked out of the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedOutEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedOutEvent = ConnectionCheckedOutEvent;\n/**\n * An event published when a connection is checked into the connection pool\n * @public\n * @category Event\n */\nclass ConnectionCheckedInEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, connection) {\n        super(pool);\n        this.connectionId = connection.id;\n    }\n}\nexports.ConnectionCheckedInEvent = ConnectionCheckedInEvent;\n/**\n * An event published when a connection pool is cleared\n * @public\n * @category Event\n */\nclass ConnectionPoolClearedEvent extends ConnectionPoolMonitoringEvent {\n    /** @internal */\n    constructor(pool, serviceId) {\n        super(pool);\n        this.serviceId = serviceId;\n    }\n}\nexports.ConnectionPoolClearedEvent = ConnectionPoolClearedEvent;\n//# sourceMappingURL=connection_pool_events.js.map"]},"metadata":{},"sourceType":"script"}