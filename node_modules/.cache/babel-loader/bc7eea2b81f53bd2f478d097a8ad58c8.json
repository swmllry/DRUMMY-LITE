{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListCollectionsOperation = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass ListCollectionsOperation extends command_1.CommandOperation {\n  constructor(db, filter, options) {\n    super(db, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.db = db;\n    this.filter = filter;\n    this.nameOnly = !!this.options.nameOnly;\n    this.authorizedCollections = !!this.options.authorizedCollections;\n\n    if (typeof this.options.batchSize === 'number') {\n      this.batchSize = this.options.batchSize;\n    }\n  }\n\n  execute(server, session, callback) {\n    return super.executeCommand(server, session, this.generateCommand((0, utils_1.maxWireVersion)(server)), callback);\n  }\n  /* This is here for the purpose of unit testing the final command that gets sent. */\n\n\n  generateCommand(wireVersion) {\n    const command = {\n      listCollections: 1,\n      filter: this.filter,\n      cursor: this.batchSize ? {\n        batchSize: this.batchSize\n      } : {},\n      nameOnly: this.nameOnly,\n      authorizedCollections: this.authorizedCollections\n    }; // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n\n    if (wireVersion >= 9 && this.options.comment !== undefined) {\n      command.comment = this.options.comment;\n    }\n\n    return command;\n  }\n\n}\n\nexports.ListCollectionsOperation = ListCollectionsOperation;\n(0, operation_1.defineAspects)(ListCollectionsOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"sources":["../../src/operations/list_collections.ts"],"names":[],"mappings":";;;;;;;AAIA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAYA;;;AACA,MAAa,wBAAb,SAA8C,SAAA,CAAA,gBAA9C,CAAwE;EAQtE,WAAA,CAAY,EAAZ,EAAoB,MAApB,EAAsC,OAAtC,EAAsE;IACpE,MAAM,EAAN,EAAU,OAAV;IAEA,KAAK,OAAL,GAAe,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,EAA1B;IACA,KAAK,EAAL,GAAU,EAAV;IACA,KAAK,MAAL,GAAc,MAAd;IACA,KAAK,QAAL,GAAgB,CAAC,CAAC,KAAK,OAAL,CAAa,QAA/B;IACA,KAAK,qBAAL,GAA6B,CAAC,CAAC,KAAK,OAAL,CAAa,qBAA5C;;IAEA,IAAI,OAAO,KAAK,OAAL,CAAa,SAApB,KAAkC,QAAtC,EAAgD;MAC9C,KAAK,SAAL,GAAiB,KAAK,OAAL,CAAa,SAA9B;IACD;EACF;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGc;IAE5B,OAAO,MAAM,cAAN,CACL,MADK,EAEL,OAFK,EAGL,KAAK,eAAL,CAAqB,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,MAAf,CAArB,CAHK,EAIL,QAJK,CAAP;EAMD;EAED;;;EACA,eAAe,CAAC,WAAD,EAAoB;IACjC,MAAM,OAAO,GAAa;MACxB,eAAe,EAAE,CADO;MAExB,MAAM,EAAE,KAAK,MAFW;MAGxB,MAAM,EAAE,KAAK,SAAL,GAAiB;QAAE,SAAS,EAAE,KAAK;MAAlB,CAAjB,GAAiD,EAHjC;MAIxB,QAAQ,EAAE,KAAK,QAJS;MAKxB,qBAAqB,EAAE,KAAK;IALJ,CAA1B,CADiC,CASjC;IACA;;IACA,IAAI,WAAW,IAAI,CAAf,IAAoB,KAAK,OAAL,CAAa,OAAb,KAAyB,SAAjD,EAA4D;MAC1D,OAAO,CAAC,OAAR,GAAkB,KAAK,OAAL,CAAa,OAA/B;IACD;;IAED,OAAO,OAAP;EACD;;AApDqE;;AAAxE,OAAA,CAAA,wBAAA,GAAA,wBAAA;AAmEA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,wBAAd,EAAwC,CACtC,WAAA,CAAA,MAAA,CAAO,cAD+B,EAEtC,WAAA,CAAA,MAAA,CAAO,SAF+B,EAGtC,WAAA,CAAA,MAAA,CAAO,eAH+B,CAAxC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListCollectionsOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass ListCollectionsOperation extends command_1.CommandOperation {\n    constructor(db, filter, options) {\n        super(db, options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.db = db;\n        this.filter = filter;\n        this.nameOnly = !!this.options.nameOnly;\n        this.authorizedCollections = !!this.options.authorizedCollections;\n        if (typeof this.options.batchSize === 'number') {\n            this.batchSize = this.options.batchSize;\n        }\n    }\n    execute(server, session, callback) {\n        return super.executeCommand(server, session, this.generateCommand((0, utils_1.maxWireVersion)(server)), callback);\n    }\n    /* This is here for the purpose of unit testing the final command that gets sent. */\n    generateCommand(wireVersion) {\n        const command = {\n            listCollections: 1,\n            filter: this.filter,\n            cursor: this.batchSize ? { batchSize: this.batchSize } : {},\n            nameOnly: this.nameOnly,\n            authorizedCollections: this.authorizedCollections\n        };\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (wireVersion >= 9 && this.options.comment !== undefined) {\n            command.comment = this.options.comment;\n        }\n        return command;\n    }\n}\nexports.ListCollectionsOperation = ListCollectionsOperation;\n(0, operation_1.defineAspects)(ListCollectionsOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=list_collections.js.map"]},"metadata":{},"sourceType":"script"}