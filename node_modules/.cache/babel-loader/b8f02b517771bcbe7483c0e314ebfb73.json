{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FindOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst read_concern_1 = require(\"../read_concern\");\n\nconst sort_1 = require(\"../sort\");\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\n\nclass FindOperation extends command_1.CommandOperation {\n  constructor(collection, ns) {\n    let filter = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(collection, options);\n    this.options = options;\n    this.ns = ns;\n\n    if (typeof filter !== 'object' || Array.isArray(filter)) {\n      throw new error_1.MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n    } // If the filter is a buffer, validate that is a valid BSON document\n\n\n    if (Buffer.isBuffer(filter)) {\n      const objectSize = filter[0] | filter[1] << 8 | filter[2] << 16 | filter[3] << 24;\n\n      if (objectSize !== filter.length) {\n        throw new error_1.MongoInvalidArgumentError(`Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`);\n      }\n    } // special case passing in an ObjectId as a filter\n\n\n    this.filter = filter != null && filter._bsontype === 'ObjectID' ? {\n      _id: filter\n    } : filter;\n  }\n\n  execute(server, session, callback) {\n    this.server = server;\n    const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n    const options = this.options;\n\n    if (options.allowDiskUse != null && serverWireVersion < 4) {\n      callback(new error_1.MongoCompatibilityError('Option \"allowDiskUse\" is not supported on MongoDB < 3.2'));\n      return;\n    }\n\n    if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n      callback(new error_1.MongoCompatibilityError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n      return;\n    }\n\n    let findCommand = makeFindCommand(this.ns, this.filter, options);\n\n    if (this.explain) {\n      findCommand = (0, utils_1.decorateWithExplain)(findCommand, this.explain);\n    }\n\n    server.command(this.ns, findCommand, { ...this.options,\n      ...this.bsonOptions,\n      documentsReturnedIn: 'firstBatch',\n      session\n    }, callback);\n  }\n\n}\n\nexports.FindOperation = FindOperation;\n\nfunction makeFindCommand(ns, filter, options) {\n  const findCommand = {\n    find: ns.collection,\n    filter\n  };\n\n  if (options.sort) {\n    findCommand.sort = (0, sort_1.formatSort)(options.sort);\n  }\n\n  if (options.projection) {\n    let projection = options.projection;\n\n    if (projection && Array.isArray(projection)) {\n      projection = projection.length ? projection.reduce((result, field) => {\n        result[field] = 1;\n        return result;\n      }, {}) : {\n        _id: 1\n      };\n    }\n\n    findCommand.projection = projection;\n  }\n\n  if (options.hint) {\n    findCommand.hint = (0, utils_1.normalizeHintField)(options.hint);\n  }\n\n  if (typeof options.skip === 'number') {\n    findCommand.skip = options.skip;\n  }\n\n  if (typeof options.limit === 'number') {\n    if (options.limit < 0) {\n      findCommand.limit = -options.limit;\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.limit = options.limit;\n    }\n  }\n\n  if (typeof options.batchSize === 'number') {\n    if (options.batchSize < 0) {\n      if (options.limit && options.limit !== 0 && Math.abs(options.batchSize) < Math.abs(options.limit)) {\n        findCommand.limit = -options.batchSize;\n      }\n\n      findCommand.singleBatch = true;\n    } else {\n      findCommand.batchSize = options.batchSize;\n    }\n  }\n\n  if (typeof options.singleBatch === 'boolean') {\n    findCommand.singleBatch = options.singleBatch;\n  } // we check for undefined specifically here to allow falsy values\n  // eslint-disable-next-line no-restricted-syntax\n\n\n  if (options.comment !== undefined) {\n    findCommand.comment = options.comment;\n  }\n\n  if (typeof options.maxTimeMS === 'number') {\n    findCommand.maxTimeMS = options.maxTimeMS;\n  }\n\n  const readConcern = read_concern_1.ReadConcern.fromOptions(options);\n\n  if (readConcern) {\n    findCommand.readConcern = readConcern.toJSON();\n  }\n\n  if (options.max) {\n    findCommand.max = options.max;\n  }\n\n  if (options.min) {\n    findCommand.min = options.min;\n  }\n\n  if (typeof options.returnKey === 'boolean') {\n    findCommand.returnKey = options.returnKey;\n  }\n\n  if (typeof options.showRecordId === 'boolean') {\n    findCommand.showRecordId = options.showRecordId;\n  }\n\n  if (typeof options.tailable === 'boolean') {\n    findCommand.tailable = options.tailable;\n  }\n\n  if (typeof options.timeout === 'boolean') {\n    findCommand.noCursorTimeout = !options.timeout;\n  } else if (typeof options.noCursorTimeout === 'boolean') {\n    findCommand.noCursorTimeout = options.noCursorTimeout;\n  }\n\n  if (typeof options.awaitData === 'boolean') {\n    findCommand.awaitData = options.awaitData;\n  }\n\n  if (typeof options.allowPartialResults === 'boolean') {\n    findCommand.allowPartialResults = options.allowPartialResults;\n  }\n\n  if (options.collation) {\n    findCommand.collation = options.collation;\n  }\n\n  if (typeof options.allowDiskUse === 'boolean') {\n    findCommand.allowDiskUse = options.allowDiskUse;\n  }\n\n  if (options.let) {\n    findCommand.let = options.let;\n  }\n\n  return findCommand;\n}\n\n(0, operation_1.defineAspects)(FindOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE, operation_1.Aspect.EXPLAINABLE, operation_1.Aspect.CURSOR_CREATING]);","map":{"version":3,"sources":["../../src/operations/find.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FindOperation = void 0;\nconst error_1 = require(\"../error\");\nconst read_concern_1 = require(\"../read_concern\");\nconst sort_1 = require(\"../sort\");\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\nconst SUPPORTS_WRITE_CONCERN_AND_COLLATION = 5;\n/** @internal */\nclass FindOperation extends command_1.CommandOperation {\n    constructor(collection, ns, filter = {}, options = {}) {\n        super(collection, options);\n        this.options = options;\n        this.ns = ns;\n        if (typeof filter !== 'object' || Array.isArray(filter)) {\n            throw new error_1.MongoInvalidArgumentError('Query filter must be a plain object or ObjectId');\n        }\n        // If the filter is a buffer, validate that is a valid BSON document\n        if (Buffer.isBuffer(filter)) {\n            const objectSize = filter[0] | (filter[1] << 8) | (filter[2] << 16) | (filter[3] << 24);\n            if (objectSize !== filter.length) {\n                throw new error_1.MongoInvalidArgumentError(`Query filter raw message size does not match message header size [${filter.length}] != [${objectSize}]`);\n            }\n        }\n        // special case passing in an ObjectId as a filter\n        this.filter = filter != null && filter._bsontype === 'ObjectID' ? { _id: filter } : filter;\n    }\n    execute(server, session, callback) {\n        this.server = server;\n        const serverWireVersion = (0, utils_1.maxWireVersion)(server);\n        const options = this.options;\n        if (options.allowDiskUse != null && serverWireVersion < 4) {\n            callback(new error_1.MongoCompatibilityError('Option \"allowDiskUse\" is not supported on MongoDB < 3.2'));\n            return;\n        }\n        if (options.collation && serverWireVersion < SUPPORTS_WRITE_CONCERN_AND_COLLATION) {\n            callback(new error_1.MongoCompatibilityError(`Server ${server.name}, which reports wire version ${serverWireVersion}, does not support collation`));\n            return;\n        }\n        let findCommand = makeFindCommand(this.ns, this.filter, options);\n        if (this.explain) {\n            findCommand = (0, utils_1.decorateWithExplain)(findCommand, this.explain);\n        }\n        server.command(this.ns, findCommand, {\n            ...this.options,\n            ...this.bsonOptions,\n            documentsReturnedIn: 'firstBatch',\n            session\n        }, callback);\n    }\n}\nexports.FindOperation = FindOperation;\nfunction makeFindCommand(ns, filter, options) {\n    const findCommand = {\n        find: ns.collection,\n        filter\n    };\n    if (options.sort) {\n        findCommand.sort = (0, sort_1.formatSort)(options.sort);\n    }\n    if (options.projection) {\n        let projection = options.projection;\n        if (projection && Array.isArray(projection)) {\n            projection = projection.length\n                ? projection.reduce((result, field) => {\n                    result[field] = 1;\n                    return result;\n                }, {})\n                : { _id: 1 };\n        }\n        findCommand.projection = projection;\n    }\n    if (options.hint) {\n        findCommand.hint = (0, utils_1.normalizeHintField)(options.hint);\n    }\n    if (typeof options.skip === 'number') {\n        findCommand.skip = options.skip;\n    }\n    if (typeof options.limit === 'number') {\n        if (options.limit < 0) {\n            findCommand.limit = -options.limit;\n            findCommand.singleBatch = true;\n        }\n        else {\n            findCommand.limit = options.limit;\n        }\n    }\n    if (typeof options.batchSize === 'number') {\n        if (options.batchSize < 0) {\n            if (options.limit &&\n                options.limit !== 0 &&\n                Math.abs(options.batchSize) < Math.abs(options.limit)) {\n                findCommand.limit = -options.batchSize;\n            }\n            findCommand.singleBatch = true;\n        }\n        else {\n            findCommand.batchSize = options.batchSize;\n        }\n    }\n    if (typeof options.singleBatch === 'boolean') {\n        findCommand.singleBatch = options.singleBatch;\n    }\n    // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n    if (options.comment !== undefined) {\n        findCommand.comment = options.comment;\n    }\n    if (typeof options.maxTimeMS === 'number') {\n        findCommand.maxTimeMS = options.maxTimeMS;\n    }\n    const readConcern = read_concern_1.ReadConcern.fromOptions(options);\n    if (readConcern) {\n        findCommand.readConcern = readConcern.toJSON();\n    }\n    if (options.max) {\n        findCommand.max = options.max;\n    }\n    if (options.min) {\n        findCommand.min = options.min;\n    }\n    if (typeof options.returnKey === 'boolean') {\n        findCommand.returnKey = options.returnKey;\n    }\n    if (typeof options.showRecordId === 'boolean') {\n        findCommand.showRecordId = options.showRecordId;\n    }\n    if (typeof options.tailable === 'boolean') {\n        findCommand.tailable = options.tailable;\n    }\n    if (typeof options.timeout === 'boolean') {\n        findCommand.noCursorTimeout = !options.timeout;\n    }\n    else if (typeof options.noCursorTimeout === 'boolean') {\n        findCommand.noCursorTimeout = options.noCursorTimeout;\n    }\n    if (typeof options.awaitData === 'boolean') {\n        findCommand.awaitData = options.awaitData;\n    }\n    if (typeof options.allowPartialResults === 'boolean') {\n        findCommand.allowPartialResults = options.allowPartialResults;\n    }\n    if (options.collation) {\n        findCommand.collation = options.collation;\n    }\n    if (typeof options.allowDiskUse === 'boolean') {\n        findCommand.allowDiskUse = options.allowDiskUse;\n    }\n    if (options.let) {\n        findCommand.let = options.let;\n    }\n    return findCommand;\n}\n(0, operation_1.defineAspects)(FindOperation, [\n    operation_1.Aspect.READ_OPERATION,\n    operation_1.Aspect.RETRYABLE,\n    operation_1.Aspect.EXPLAINABLE,\n    operation_1.Aspect.CURSOR_CREATING\n]);\n//# sourceMappingURL=find.js.map"]},"metadata":{},"sourceType":"script"}