{"ast":null,"code":"var _jsxFileName = \"/Users/a4543721/Documents/Concordia-Bootcamps/DRUMMY - FINAL PROJECT/Drummy/client/src/components/kit/Drummy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef, useContext } from 'react';\nimport styled from 'styled-components';\nimport Display from './Display';\nimport LowShelfFilter from './effects/eq/LowShelfFilter';\nimport MidPeakFilter from './effects/eq/MidPeakFilter';\nimport HighShelfFilter from './effects/eq/HighShelfFilter'; // import Compressor from './effects/Compressor'\n\nimport Saturation from './effects/Saturation';\nimport Delay from './effects/Delay'; // import Reverb from './effects/Reverb'\n\nimport MasterVolume from './effects/MasterVolume';\nimport Button from './Button';\nimport SaveUserPatch from './SaveUserPatch';\nimport { topRowSamples, bottomRowSamples } from './samples/samples';\nimport { CurrentUserContext } from '../CurrentUserProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Drummy = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(CurrentUserContext);\n  const [display, setDisplay] = useState('');\n  const [currentSample, setCurrentSample] = useState(); //AUDIO CONTEXT\n\n  const [audioContextState, setAudioContextState] = useState(); // const [isPlaying, setIsPlaying] = useState(false)\n\n  const [lowShelfFilterState, setLowShelfFilterState] = useState();\n  const [lowShelfFilterGainState, setLowShelfFilterGainState] = useState(0);\n  const [midPeakFilterState, setMidPeakFilterState] = useState();\n  const [midPeakFilterGainState, setMidPeakFilterGainState] = useState(0);\n  const [highShelfFilterState, setHighShelfFilterState] = useState();\n  const [highShelfFilterGainState, setHighShelfFilterGainState] = useState(0);\n  const [delayOnOff, setDelayOnOff] = useState(\"OFF\");\n  const [delayTimeState, setDelayTimeState] = useState();\n  const [delayTimeValue, setDelayTimeValue] = useState(0);\n  const [delayFeedbackState, setDelayFeedbackState] = useState(0);\n  const [delayFeedbackGainState, setDelayFeedbackGainState] = useState(0);\n  const [masterVolumeState, setMasterVolumeState] = useState();\n  const [masterVolumeValue, setMasterVolumeValue] = useState(0);\n  const audioRef = useRef();\n  const drumSample = useRef();\n  useEffect(() => {\n    if (audioRef.current && !drumSample.current) {\n      const AudioContext = window.AudioContext || window.webkitAudioContext;\n      const audioContext = new AudioContext();\n      setAudioContextState(audioContext);\n      const output = audioContext.destination;\n      drumSample.current = audioContext.createMediaElementSource(audioRef.current); //EQ\n\n      const lowShelfFilter = audioContext.createBiquadFilter();\n      lowShelfFilter.type = 'lowshelf';\n      lowShelfFilter.frequency.value = 250;\n      setLowShelfFilterState(lowShelfFilter);\n      const midPeakFilter = audioContext.createBiquadFilter();\n      midPeakFilter.type = 'peaking';\n      midPeakFilter.frequency.value = 1000;\n      midPeakFilter.Q.value = 0.7;\n      setMidPeakFilterState(midPeakFilter);\n      const highShelfFilter = audioContext.createBiquadFilter();\n      highShelfFilter.type = 'highshelf';\n      highShelfFilter.frequency.value = 3000;\n      setHighShelfFilterState(highShelfFilter); //COMPRESSOR\n      // const compressor = audioContext.createDynamicsCompressor()\n      // compressor.attack.value = 0.003;\n      // compressor.release.value = 0.25;\n      // compressor.ratio.value = 12;\n      // compressor.threshold.value = -24;\n      // compressor.knee.value = 40;\n      //DELAY\n\n      const delay = audioContext.createDelay();\n      delay.delayTime.value = 0.0;\n      setDelayTimeState(delay);\n      const feedback = audioContext.createGain();\n      feedback.gain.value = 0.3;\n      setDelayFeedbackState(feedback); //MASTER VOLUME\n\n      const masterVolume = audioContext.createGain();\n      masterVolume.gain.value = 1;\n      setMasterVolumeState(masterVolume); // const analyserNode = audioContext.createAnalyser();\n      // analyserNode.fftSize = 2048;\n      // analyserNode.maxDecibels = -25;\n      // analyserNode.minDecibels = -60;\n      // analyserNode.smoothingTimeConstant = 0.5;\n\n      drumSample.current.connect(lowShelfFilter);\n      lowShelfFilter.connect(midPeakFilter);\n      midPeakFilter.connect(highShelfFilter);\n      highShelfFilter.connect(delay);\n      highShelfFilter.connect(masterVolume);\n      delay.connect(feedback);\n      feedback.connect(delay);\n      delay.connect(masterVolume);\n      masterVolume.connect(output); // delay.connect(masterVolume);\n    }\n\n    return () => {\n      if (drumSample.current) {// drumSample.current.disconnect()\n      }\n    };\n  }, [audioRef, drumSample]); //REACT\n\n  const topRowButtons = topRowSamples.map(sample => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: sample.id,\n      keyCode: sample.keyCode,\n      sample: sample.sample,\n      url: sample.url,\n      setDisplay: setDisplay,\n      setCurrentSample: setCurrentSample,\n      audioContextState: audioContextState,\n      audioRef: audioRef\n    }, sample.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 16\n    }, this);\n  });\n  const bottomRowButtons = bottomRowSamples.map(sample => {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      id: sample.id,\n      keyCode: sample.keyCode,\n      sample: sample.sample,\n      url: sample.url,\n      setDisplay: setDisplay,\n      setCurrentSample: setCurrentSample,\n      audioContextState: audioContextState,\n      audioRef: audioRef\n    }, sample.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 16\n    }, this);\n  });\n\n  const lowShelfFilterGain = ev => {\n    const {\n      value\n    } = ev.target;\n    setLowShelfFilterGainState(lowShelfFilterState.gain.value = value);\n  };\n\n  const midPeakFilterGain = ev => {\n    const {\n      value\n    } = ev.target;\n    setMidPeakFilterGainState(midPeakFilterState.gain.value = value);\n  };\n\n  const highShelfFilterGain = ev => {\n    const {\n      value\n    } = ev.target;\n    setHighShelfFilterGainState(highShelfFilterState.gain.value = value);\n  };\n\n  const delayTime = ev => {\n    const {\n      value\n    } = ev.target;\n    setDelayTimeValue(delayTimeState.delayTime.value = value);\n  };\n\n  const delayFeedback = ev => {\n    const {\n      value\n    } = ev.target;\n    setDelayFeedbackGainState(delayFeedbackState.gain.value = value);\n  };\n\n  const volume = ev => {\n    const {\n      value\n    } = ev.target;\n    setMasterVolumeValue(masterVolumeState.gain.value = value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Drummy, \"vkZOM3SzM9VlI7hMHgZ6qTpTZco=\");\n\n_c = Drummy;\nexport default Drummy;\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nwidth: 100vw;\nborder: solid 3px green;\nbackground-color: black;\n`;\n_c2 = Wrapper;\nconst DrummyContainer = styled.div`\n/* min-height: 72%;\nwidth: 70%;\nmax-width: 900px;\nmin-width: 810px;\npadding: 6px;\nbackground-color: rgba(219,218,199,255);\nborder-top: solid 8px rgba(230,225,210,255);\nborder-right: solid 8px rgba(175,175,165,225);\nborder-bottom: solid 8px rgba(168,168,155,255);\nborder-left: solid 8px rgba(215,215,200,200);\nbox-shadow:inset 0px 0px 2px 1px rgba(0,0,0,0.55);\n/* box-shadow: 0px 0px 16px 5px rgba(206,202,190,255); */\n/* background-color: #eeeeec; */\n/* border: solid 3px grey; */\n/* border-radius: 4px; */ \n`;\nconst TopRow = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 40%;\n/* border: solid 2px grey; */\n`;\nconst DisplayContainer = styled.div`\nborder-top: solid 5px rgba(230,225,220,255);\nborder-right: solid 5px rgba(175,175,165,200);\nborder-bottom: solid 5px rgba(168,168,155,255);\nborder-left: solid 5px rgba(215,215,200,150);\n`;\nconst VisualizerContainer = styled.div`\n/* width: 60%;\nheight: 70%;\nmargin-right: 7px;\nmargin-left: 7px;\nborder: solid 3px grey; */\n`;\nconst MiddleRow = styled.div`\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\nheight: 20%;\nborder-top: solid 2px grey;\nborder-bottom: solid 2px grey;\n/* border-radius: 2px; */\nmargin-top: 3px;\nmargin-bottom: 3px;\n`;\nconst Bax = styled.div`\ndisplay: flex;\n/* border: solid 3px blue; */\n`; // const Dynamics = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// min-height: 20px;\n// border: solid 3px orange;\n// `\n// const Drive = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// /* border: solid 3px purple; */\n// `\n// const TimeEffects = styled.div`\n// border: solid 3px pink;\n// `\n\nconst DelayContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n/* border: solid 3px green; */\n`; // const ReverbContainer = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// border: solid 3px red;\n// `\n\nconst Volume = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n/* border: solid 3px black; */\n// ` // const BottomRow = styled.div`\n// display: flex;\n// height: 35%;\n\n/* border-top: solid 4px rgba(168,168,165,255);\nborder-right: solid 4px rgba(215,210,190,255);\nborder-bottom: solid 4px rgba(230,225,220,255);\nborder-left: solid 4px rgba(175,175,165,150); */\n\n/* margin-top: 2px; */\n`\n// const StartAndStop = styled.div` // display: flex;\n// justify-content: center;\n// align-items: center;\n// width: 25%;\n\n/* border: solid 3px green;  */\n`\n// const TempLogo = styled.div` // display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// `\n// const DR = styled.h1`\n// font-family: 'PBIO', sans-serif;\n// color: rgba(45,71,81,255);\n// font-size: 28px;\n// `\n// const Model = styled.h1`\n// font-family: 'PBIO', sans-serif;\n// color: rgba(54,71,81,255);\n// font-size: 28px;\n// `\n// const Start = styled.div`\n// `\n// const Stop = styled.div`\n// `\n// const Buttons = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// width: 80%;\n// margin-top: 5px;\n\n/* border: solid 3px orange; */\n`\n\n// const Buttons1to8 = styled.div` // display: flex;\n// margin: 2px;\n\n/* border: solid 1px black; */\n`\n\n// const Buttons9to16 = styled.div`; // display: flex;\n// `\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Drummy\");\n$RefreshReg$(_c2, \"Wrapper\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useContext","styled","Display","LowShelfFilter","MidPeakFilter","HighShelfFilter","Saturation","Delay","MasterVolume","Button","SaveUserPatch","topRowSamples","bottomRowSamples","CurrentUserContext","Drummy","currentUser","display","setDisplay","currentSample","setCurrentSample","audioContextState","setAudioContextState","lowShelfFilterState","setLowShelfFilterState","lowShelfFilterGainState","setLowShelfFilterGainState","midPeakFilterState","setMidPeakFilterState","midPeakFilterGainState","setMidPeakFilterGainState","highShelfFilterState","setHighShelfFilterState","highShelfFilterGainState","setHighShelfFilterGainState","delayOnOff","setDelayOnOff","delayTimeState","setDelayTimeState","delayTimeValue","setDelayTimeValue","delayFeedbackState","setDelayFeedbackState","delayFeedbackGainState","setDelayFeedbackGainState","masterVolumeState","setMasterVolumeState","masterVolumeValue","setMasterVolumeValue","audioRef","drumSample","current","AudioContext","window","webkitAudioContext","audioContext","output","destination","createMediaElementSource","lowShelfFilter","createBiquadFilter","type","frequency","value","midPeakFilter","Q","highShelfFilter","delay","createDelay","delayTime","feedback","createGain","gain","masterVolume","connect","topRowButtons","map","sample","id","keyCode","url","bottomRowButtons","lowShelfFilterGain","ev","target","midPeakFilterGain","highShelfFilterGain","delayFeedback","volume","Wrapper","div","DrummyContainer","TopRow","DisplayContainer","VisualizerContainer","MiddleRow","Bax","DelayContainer","Volume"],"sources":["/Users/a4543721/Documents/Concordia-Bootcamps/DRUMMY - FINAL PROJECT/Drummy/client/src/components/kit/Drummy.js"],"sourcesContent":["import React, { useState, useEffect, useRef, useContext } from 'react'\nimport styled from 'styled-components'\nimport Display from './Display'\nimport LowShelfFilter from './effects/eq/LowShelfFilter'\nimport MidPeakFilter from './effects/eq/MidPeakFilter'\nimport HighShelfFilter from './effects/eq/HighShelfFilter'\n// import Compressor from './effects/Compressor'\nimport Saturation from './effects/Saturation'\nimport Delay from './effects/Delay'\n// import Reverb from './effects/Reverb'\nimport MasterVolume from './effects/MasterVolume'\nimport Button from './Button'\nimport SaveUserPatch from './SaveUserPatch'\nimport { topRowSamples, bottomRowSamples } from './samples/samples'\nimport { CurrentUserContext } from '../CurrentUserProvider'\n\nconst Drummy = () => {\n\n    const { currentUser } = useContext(CurrentUserContext)\n\n    const [display, setDisplay] = useState('')\n    const [currentSample, setCurrentSample] = useState()\n\n    //AUDIO CONTEXT\n\n    const [audioContextState, setAudioContextState] = useState()\n    // const [isPlaying, setIsPlaying] = useState(false)\n\n    const [lowShelfFilterState, setLowShelfFilterState] = useState()\n    const [lowShelfFilterGainState, setLowShelfFilterGainState] = useState(0)\n\n    const [midPeakFilterState, setMidPeakFilterState] = useState();\n    const [midPeakFilterGainState, setMidPeakFilterGainState] = useState(0);\n\n    const [highShelfFilterState, setHighShelfFilterState] = useState();\n    const [highShelfFilterGainState, setHighShelfFilterGainState] = useState(0);\n\n    const [delayOnOff, setDelayOnOff] = useState(\"OFF\")\n\n    const [delayTimeState, setDelayTimeState] = useState()\n    const [delayTimeValue, setDelayTimeValue] = useState(0)\n\n    const [delayFeedbackState, setDelayFeedbackState] = useState(0)\n    const [delayFeedbackGainState, setDelayFeedbackGainState] = useState(0)\n\n    const [masterVolumeState, setMasterVolumeState] = useState()\n    const [masterVolumeValue, setMasterVolumeValue] = useState(0)\n\n\n    const audioRef = useRef()\n\n    const drumSample = useRef()\n\n    useEffect(() => {\n\n        if (audioRef.current && !drumSample.current) {\n\n            const AudioContext = window.AudioContext || window.webkitAudioContext;\n            const audioContext = new AudioContext();\n            setAudioContextState(audioContext)\n\n            const output = audioContext.destination\n\n            drumSample.current = audioContext.createMediaElementSource(audioRef.current)\n\n            //EQ\n            const lowShelfFilter = audioContext.createBiquadFilter()\n            lowShelfFilter.type = 'lowshelf'\n            lowShelfFilter.frequency.value = 250;\n            setLowShelfFilterState(lowShelfFilter)\n\n            const midPeakFilter = audioContext.createBiquadFilter()\n            midPeakFilter.type = 'peaking'\n            midPeakFilter.frequency.value = 1000;\n            midPeakFilter.Q.value = 0.7;\n            setMidPeakFilterState(midPeakFilter)\n\n            const highShelfFilter = audioContext.createBiquadFilter()\n            highShelfFilter.type = 'highshelf'\n            highShelfFilter.frequency.value = 3000;\n            setHighShelfFilterState(highShelfFilter)\n\n            //COMPRESSOR\n            // const compressor = audioContext.createDynamicsCompressor()\n            // compressor.attack.value = 0.003;\n            // compressor.release.value = 0.25;\n            // compressor.ratio.value = 12;\n            // compressor.threshold.value = -24;\n            // compressor.knee.value = 40;\n\n            //DELAY\n            const delay = audioContext.createDelay();\n            delay.delayTime.value = 0.0;\n            setDelayTimeState(delay)\n            const feedback = audioContext.createGain();\n            feedback.gain.value = 0.3;\n            setDelayFeedbackState(feedback)\n\n\n            //MASTER VOLUME\n            const masterVolume = audioContext.createGain();\n            masterVolume.gain.value = 1;\n            setMasterVolumeState(masterVolume)\n\n            // const analyserNode = audioContext.createAnalyser();\n            // analyserNode.fftSize = 2048;\n            // analyserNode.maxDecibels = -25;\n            // analyserNode.minDecibels = -60;\n            // analyserNode.smoothingTimeConstant = 0.5;\n\n            drumSample.current.connect(lowShelfFilter)\n            lowShelfFilter.connect(midPeakFilter)\n            midPeakFilter.connect(highShelfFilter)\n            highShelfFilter.connect(delay)\n            highShelfFilter.connect(masterVolume)\n\n            delay.connect(feedback);\n            feedback.connect(delay);\n            delay.connect(masterVolume);\n\n            masterVolume.connect(output)\n            // delay.connect(masterVolume);\n\n        }\n\n        return () => {\n\n            if (drumSample.current) {\n                // drumSample.current.disconnect()\n            }\n        }\n\n    }, [audioRef, drumSample])\n\n    //REACT\n\n    const topRowButtons = topRowSamples.map(sample => {\n        return <Button\n            key={sample.id}\n            id={sample.id}\n            keyCode={sample.keyCode}\n            sample={sample.sample}\n            url={sample.url}\n            setDisplay={setDisplay}\n            setCurrentSample={setCurrentSample}\n            audioContextState={audioContextState}\n            audioRef={audioRef}\n        />\n    })\n\n    const bottomRowButtons = bottomRowSamples.map(sample => {\n\n        return <Button\n            key={sample.id}\n            id={sample.id}\n            keyCode={sample.keyCode}\n            sample={sample.sample}\n            url={sample.url}\n            setDisplay={setDisplay}\n            setCurrentSample={setCurrentSample}\n            audioContextState={audioContextState}\n            audioRef={audioRef}\n        />\n    })\n\n    const lowShelfFilterGain = (ev) => {\n        const { value } = ev.target\n        setLowShelfFilterGainState(lowShelfFilterState.gain.value = value)\n    }\n\n    const midPeakFilterGain = (ev) => {\n        const { value } = ev.target\n        setMidPeakFilterGainState(midPeakFilterState.gain.value = value)\n    }\n\n    const highShelfFilterGain = (ev) => {\n        const { value } = ev.target\n        setHighShelfFilterGainState(highShelfFilterState.gain.value = value)\n    }\n\n    const delayTime = (ev) => {\n        const { value } = ev.target\n        setDelayTimeValue(delayTimeState.delayTime.value = value)\n    }\n\n    const delayFeedback = (ev) => {\n        const { value } = ev.target\n        setDelayFeedbackGainState(delayFeedbackState.gain.value = value)\n    }\n\n    const volume = (ev) => {\n        const { value } = ev.target\n        setMasterVolumeValue(masterVolumeState.gain.value = value)\n    }\n\n    return (\n\n        <Wrapper>\n\n            {/* <DrummyContainer> */}\n\n                {/* <TopRow> */}\n\n                    {/* <DisplayContainer>\n                        <Display display={display} />\n                    </DisplayContainer> */}\n                    {/* <VisualizerContainer>\n\n                    </VisualizerContainer> */}\n\n                {/* </TopRow> */}\n\n                {/* <MiddleRow> */}\n\n                    {/* <Bax>\n                        <LowShelfFilter\n                            lowShelfFilterGain={lowShelfFilterGain}\n                            lowShelfFilterGainState={lowShelfFilterGainState}\n                        />\n\n                        <MidPeakFilter\n                            midPeakFilterGain={midPeakFilterGain}\n                            midPeakFilterGainState={midPeakFilterGainState}\n                        />\n\n                        <HighShelfFilter\n                            highShelfFilterGain={highShelfFilterGain}\n                            highShelfFilterGainState={highShelfFilterGainState}\n                        />\n                    </Bax> */}\n\n                    {/* <Dynamics>\n                        <Compressor\n\n                        />\n\n                    </Dynamics> */}\n\n                    {/* <Drive>\n                        <Saturation\n\n                        />\n                    </Drive> */}\n\n                    {/* <DelayContainer>\n                        <Delay\n                            delayTime={delayTime}\n                            delayTimeValue={delayTimeValue}\n                            delayFeedback={delayFeedback}\n                            delayFeedbackGainState={delayFeedbackGainState}\n                            delayOnOff={delayOnOff}\n                            setDelayOnOff={setDelayOnOff}\n                        />\n                    </DelayContainer> */}\n\n                    {/* <ReverbContainer>\n                        <Reverb\n\n                        />\n                    </ReverbContainer> */}\n\n                    {/* <Volume>\n                        <MasterVolume\n                            volume={volume}\n                            masterVolumeValue={masterVolumeValue}\n                        />\n                    </Volume> */}\n\n                    {/* <SaveUserPatch\n                        currentUser={currentUser}\n                        lowShelfFilterGainState={lowShelfFilterGainState}\n                        midPeakFilterGainState={midPeakFilterGainState}\n                        highShelfFilterGainState={highShelfFilterGainState}\n                        delayTimeValue={delayTimeValue}\n                        delayFeedbackGainState={delayFeedbackGainState}\n                    />\n\n                    <audio id={\"audio\"} ref={audioRef} /* onEnded={() => setIsPlaying(true)}  src={currentSample} autoPlay /> \n\n                {/* </MiddleRow> */}\n\n                {/* <BottomRow> */}\n                    {/* <StartAndStop> */}\n\n                        {/* <TempLogo>\n\n                            <DR>DRUMMY</DR>\n                            <Model>TR-505</Model>\n\n                        </TempLogo> */}\n\n                        {/* <Start>\n\n                        </Start>\n                        <Stop>\n\n                        </Stop> */}\n                    {/* </StartAndStop> */}\n                    {/* <Buttons>\n                        <Buttons1to8>\n                            {topRowButtons}\n                        </Buttons1to8>\n                        <Buttons9to16>\n                            {bottomRowButtons}\n                        </Buttons9to16>\n                    </Buttons> */}\n                {/* </BottomRow> */}\n\n            {/* </DrummyContainer> */}\n        </Wrapper >\n\n    )\n}\n\nexport default Drummy\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nheight: 100vh;\nwidth: 100vw;\nborder: solid 3px green;\nbackground-color: black;\n`\n\nconst DrummyContainer = styled.div`\n/* min-height: 72%;\nwidth: 70%;\nmax-width: 900px;\nmin-width: 810px;\npadding: 6px;\nbackground-color: rgba(219,218,199,255);\nborder-top: solid 8px rgba(230,225,210,255);\nborder-right: solid 8px rgba(175,175,165,225);\nborder-bottom: solid 8px rgba(168,168,155,255);\nborder-left: solid 8px rgba(215,215,200,200);\nbox-shadow:inset 0px 0px 2px 1px rgba(0,0,0,0.55);\n/* box-shadow: 0px 0px 16px 5px rgba(206,202,190,255); */\n/* background-color: #eeeeec; */\n/* border: solid 3px grey; */\n/* border-radius: 4px; */ \n`\n\n\nconst TopRow = styled.div`\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nheight: 40%;\n/* border: solid 2px grey; */\n`\n\nconst DisplayContainer = styled.div`\nborder-top: solid 5px rgba(230,225,220,255);\nborder-right: solid 5px rgba(175,175,165,200);\nborder-bottom: solid 5px rgba(168,168,155,255);\nborder-left: solid 5px rgba(215,215,200,150);\n`\n\nconst VisualizerContainer = styled.div`\n/* width: 60%;\nheight: 70%;\nmargin-right: 7px;\nmargin-left: 7px;\nborder: solid 3px grey; */\n`\n\nconst MiddleRow = styled.div`\ndisplay: flex;\njustify-content: space-evenly;\nalign-items: center;\nheight: 20%;\nborder-top: solid 2px grey;\nborder-bottom: solid 2px grey;\n/* border-radius: 2px; */\nmargin-top: 3px;\nmargin-bottom: 3px;\n`\n\nconst Bax = styled.div`\ndisplay: flex;\n/* border: solid 3px blue; */\n`\n\n// const Dynamics = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// min-height: 20px;\n// border: solid 3px orange;\n// `\n\n// const Drive = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// /* border: solid 3px purple; */\n// `\n\n// const TimeEffects = styled.div`\n// border: solid 3px pink;\n// `\n\nconst DelayContainer = styled.div`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\n/* border: solid 3px green; */\n`\n\n// const ReverbContainer = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// border: solid 3px red;\n// `\n\nconst Volume = styled.div`\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n/* border: solid 3px black; */\n// `\n\n// const BottomRow = styled.div`\n// display: flex;\n// height: 35%;\n/* border-top: solid 4px rgba(168,168,165,255);\nborder-right: solid 4px rgba(215,210,190,255);\nborder-bottom: solid 4px rgba(230,225,220,255);\nborder-left: solid 4px rgba(175,175,165,150); */\n/* margin-top: 2px; */\n`\n// const StartAndStop = styled.div`\n// display: flex;\n// justify-content: center;\n// align-items: center;\n// width: 25%;\n/* border: solid 3px green;  */\n`\n// const TempLogo = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// `\n\n// const DR = styled.h1`\n// font-family: 'PBIO', sans-serif;\n// color: rgba(45,71,81,255);\n// font-size: 28px;\n// `\n\n// const Model = styled.h1`\n// font-family: 'PBIO', sans-serif;\n// color: rgba(54,71,81,255);\n// font-size: 28px;\n// `\n\n// const Start = styled.div`\n// `\n\n// const Stop = styled.div`\n// `\n\n// const Buttons = styled.div`\n// display: flex;\n// flex-direction: column;\n// justify-content: center;\n// align-items: center;\n// width: 80%;\n// margin-top: 5px;\n/* border: solid 3px orange; */\n`\n\n// const Buttons1to8 = styled.div`\n// display: flex;\n// margin: 2px;\n/* border: solid 1px black; */\n`\n\n// const Buttons9to16 = styled.div`\n// display: flex;\n// `"],"mappings":"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iCA,KAAlC,CAAjB;EACH,CAHD;;EAKA,MAAMwB,aAAa,GAAIJ,EAAD,IAAQ;IAC1B,MAAM;MAAEpB;IAAF,IAAYoB,EAAE,CAACC,MAArB;IACAxC,yBAAyB,CAACH,kBAAkB,CAAC+B,IAAnB,CAAwBT,KAAxB,GAAgCA,KAAjC,CAAzB;EACH,CAHD;;EAKA,MAAMyB,MAAM,GAAIL,EAAD,IAAQ;IACnB,MAAM;MAAEpB;IAAF,IAAYoB,EAAE,CAACC,MAArB;IACApC,oBAAoB,CAACH,iBAAiB,CAAC2B,IAAlB,CAAuBT,KAAvB,GAA+BA,KAAhC,CAApB;EACH,CAHD;;EAKA,oBAEI,QAAC,OAAD;IAAA;IAAA;IAAA;EAAA,QAFJ;AAqHH,CAxSD;;GAAMhD,M;;KAAAA,M;AA0SN,eAAeA,MAAf;AAEA,MAAM0E,OAAO,GAAGvF,MAAM,CAACwF,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;MAAMD,O;AAWN,MAAME,eAAe,GAAGzF,MAAM,CAACwF,GAAI;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;AAmBA,MAAME,MAAM,GAAG1F,MAAM,CAACwF,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMG,gBAAgB,GAAG3F,MAAM,CAACwF,GAAI;AACpC;AACA;AACA;AACA;AACA,CALA;AAOA,MAAMI,mBAAmB,GAAG5F,MAAM,CAACwF,GAAI;AACvC;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,MAAMK,SAAS,GAAG7F,MAAM,CAACwF,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAMM,GAAG,GAAG9F,MAAM,CAACwF,GAAI;AACvB;AACA;AACA,CAHA,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMO,cAAc,GAAG/F,MAAM,CAACwF,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CANA,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMQ,MAAM,GAAGhG,MAAM,CAACwF,GAAI;AAC1B;AACA;AACA;AACA;AACA,IALe,CAOf;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACC;AACD,mCAhBe,CAiBf;AACA;AACA;AACA;;AACA;AACC;AACD,+BAvBe,CAwBf;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACC;AACD;AACA,kCA1De,CA2Df;AACA;;AACA;AACC;AACD;AACA,mCAhEA,C,CAiEA;AACA"},"metadata":{},"sourceType":"module"}