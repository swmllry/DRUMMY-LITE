{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StreamDescription = void 0;\n\nconst common_1 = require(\"../sdam/common\");\n\nconst server_description_1 = require(\"../sdam/server_description\");\n\nconst RESPONSE_FIELDS = ['minWireVersion', 'maxWireVersion', 'maxBsonObjectSize', 'maxMessageSizeBytes', 'maxWriteBatchSize', 'logicalSessionTimeoutMinutes'];\n/** @public */\n\nclass StreamDescription {\n  constructor(address, options) {\n    this.address = address;\n    this.type = common_1.ServerType.Unknown;\n    this.minWireVersion = undefined;\n    this.maxWireVersion = undefined;\n    this.maxBsonObjectSize = 16777216;\n    this.maxMessageSizeBytes = 48000000;\n    this.maxWriteBatchSize = 100000;\n    this.logicalSessionTimeoutMinutes = options === null || options === void 0 ? void 0 : options.logicalSessionTimeoutMinutes;\n    this.loadBalanced = !!(options === null || options === void 0 ? void 0 : options.loadBalanced);\n    this.compressors = options && options.compressors && Array.isArray(options.compressors) ? options.compressors : [];\n  }\n\n  receiveResponse(response) {\n    if (response == null) {\n      return;\n    }\n\n    this.type = (0, server_description_1.parseServerType)(response);\n\n    for (const field of RESPONSE_FIELDS) {\n      if (response[field] != null) {\n        this[field] = response[field];\n      } // testing case\n\n\n      if ('__nodejs_mock_server__' in response) {\n        this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n      }\n    }\n\n    if (response.compression) {\n      this.compressor = this.compressors.filter(c => {\n        var _a;\n\n        return (_a = response.compression) === null || _a === void 0 ? void 0 : _a.includes(c);\n      })[0];\n    }\n  }\n\n}\n\nexports.StreamDescription = StreamDescription;","map":{"version":3,"sources":["../../src/cmap/stream_description.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,QAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,MAAA,oBAAA,GAAA,OAAA,CAAA,4BAAA,CAAA;;AAGA,MAAM,eAAe,GAAG,CACtB,gBADsB,EAEtB,gBAFsB,EAGtB,mBAHsB,EAItB,qBAJsB,EAKtB,mBALsB,EAMtB,8BANsB,CAAxB;AAgBA;;AACA,MAAa,iBAAb,CAA8B;EAiB5B,WAAA,CAAY,OAAZ,EAA6B,OAA7B,EAA+D;IAC7D,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,IAAL,GAAY,QAAA,CAAA,UAAA,CAAW,OAAvB;IACA,KAAK,cAAL,GAAsB,SAAtB;IACA,KAAK,cAAL,GAAsB,SAAtB;IACA,KAAK,iBAAL,GAAyB,QAAzB;IACA,KAAK,mBAAL,GAA2B,QAA3B;IACA,KAAK,iBAAL,GAAyB,MAAzB;IACA,KAAK,4BAAL,GAAoC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,4BAA7C;IACA,KAAK,YAAL,GAAoB,CAAC,EAAC,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,YAAV,CAArB;IACA,KAAK,WAAL,GACE,OAAO,IAAI,OAAO,CAAC,WAAnB,IAAkC,KAAK,CAAC,OAAN,CAAc,OAAO,CAAC,WAAtB,CAAlC,GACI,OAAO,CAAC,WADZ,GAEI,EAHN;EAID;;EAED,eAAe,CAAC,QAAD,EAA0B;IACvC,IAAI,QAAQ,IAAI,IAAhB,EAAsB;MACpB;IACD;;IACD,KAAK,IAAL,GAAY,CAAA,GAAA,oBAAA,CAAA,eAAA,EAAgB,QAAhB,CAAZ;;IACA,KAAK,MAAM,KAAX,IAAoB,eAApB,EAAqC;MACnC,IAAI,QAAQ,CAAC,KAAD,CAAR,IAAmB,IAAvB,EAA6B;QAC3B,KAAK,KAAL,IAAc,QAAQ,CAAC,KAAD,CAAtB;MACD,CAHkC,CAKnC;;;MACA,IAAI,4BAA4B,QAAhC,EAA0C;QACxC,KAAK,sBAAL,GAA8B,QAAQ,CAAC,wBAAD,CAAtC;MACD;IACF;;IAED,IAAI,QAAQ,CAAC,WAAb,EAA0B;MACxB,KAAK,UAAL,GAAkB,KAAK,WAAL,CAAiB,MAAjB,CAAwB,CAAC,IAAG;QAAA,IAAA,EAAA;;QAAC,OAAA,CAAA,EAAA,GAAA,QAAQ,CAAC,WAAT,MAAoB,IAApB,IAAoB,EAAA,KAAA,KAAA,CAApB,GAAoB,KAAA,CAApB,GAAoB,EAAA,CAAE,QAAF,CAAW,CAAX,CAApB;MAAiC,CAA9D,EAAgE,CAAhE,CAAlB;IACD;EACF;;AApD2B;;AAA9B,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StreamDescription = void 0;\nconst common_1 = require(\"../sdam/common\");\nconst server_description_1 = require(\"../sdam/server_description\");\nconst RESPONSE_FIELDS = [\n    'minWireVersion',\n    'maxWireVersion',\n    'maxBsonObjectSize',\n    'maxMessageSizeBytes',\n    'maxWriteBatchSize',\n    'logicalSessionTimeoutMinutes'\n];\n/** @public */\nclass StreamDescription {\n    constructor(address, options) {\n        this.address = address;\n        this.type = common_1.ServerType.Unknown;\n        this.minWireVersion = undefined;\n        this.maxWireVersion = undefined;\n        this.maxBsonObjectSize = 16777216;\n        this.maxMessageSizeBytes = 48000000;\n        this.maxWriteBatchSize = 100000;\n        this.logicalSessionTimeoutMinutes = options === null || options === void 0 ? void 0 : options.logicalSessionTimeoutMinutes;\n        this.loadBalanced = !!(options === null || options === void 0 ? void 0 : options.loadBalanced);\n        this.compressors =\n            options && options.compressors && Array.isArray(options.compressors)\n                ? options.compressors\n                : [];\n    }\n    receiveResponse(response) {\n        if (response == null) {\n            return;\n        }\n        this.type = (0, server_description_1.parseServerType)(response);\n        for (const field of RESPONSE_FIELDS) {\n            if (response[field] != null) {\n                this[field] = response[field];\n            }\n            // testing case\n            if ('__nodejs_mock_server__' in response) {\n                this.__nodejs_mock_server__ = response['__nodejs_mock_server__'];\n            }\n        }\n        if (response.compression) {\n            this.compressor = this.compressors.filter(c => { var _a; return (_a = response.compression) === null || _a === void 0 ? void 0 : _a.includes(c); })[0];\n        }\n    }\n}\nexports.StreamDescription = StreamDescription;\n//# sourceMappingURL=stream_description.js.map"]},"metadata":{},"sourceType":"script"}