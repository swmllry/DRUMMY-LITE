{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ListDatabasesOperation = void 0;\n\nconst utils_1 = require(\"../utils\");\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass ListDatabasesOperation extends command_1.CommandOperation {\n  constructor(db, options) {\n    super(db, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n  }\n\n  execute(server, session, callback) {\n    const cmd = {\n      listDatabases: 1\n    };\n\n    if (this.options.nameOnly) {\n      cmd.nameOnly = Number(cmd.nameOnly);\n    }\n\n    if (this.options.filter) {\n      cmd.filter = this.options.filter;\n    }\n\n    if (typeof this.options.authorizedDatabases === 'boolean') {\n      cmd.authorizedDatabases = this.options.authorizedDatabases;\n    } // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n\n\n    if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n      cmd.comment = this.options.comment;\n    }\n\n    super.executeCommand(server, session, cmd, callback);\n  }\n\n}\n\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);","map":{"version":3,"sources":["../../src/operations/list_databases.ts"],"names":[],"mappings":";;;;;;;AAIA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAoBA;;;AACA,MAAa,sBAAb,SAA4C,SAAA,CAAA,gBAA5C,CAAiF;EAG/E,WAAA,CAAY,EAAZ,EAAoB,OAApB,EAAkD;IAChD,MAAM,EAAN,EAAU,OAAV;IACA,KAAK,OAAL,GAAe,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,EAA1B;IACA,KAAK,EAAL,GAAU,IAAI,OAAA,CAAA,gBAAJ,CAAqB,OAArB,EAA8B,MAA9B,CAAV;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGyB;IAEvC,MAAM,GAAG,GAAa;MAAE,aAAa,EAAE;IAAjB,CAAtB;;IACA,IAAI,KAAK,OAAL,CAAa,QAAjB,EAA2B;MACzB,GAAG,CAAC,QAAJ,GAAe,MAAM,CAAC,GAAG,CAAC,QAAL,CAArB;IACD;;IAED,IAAI,KAAK,OAAL,CAAa,MAAjB,EAAyB;MACvB,GAAG,CAAC,MAAJ,GAAa,KAAK,OAAL,CAAa,MAA1B;IACD;;IAED,IAAI,OAAO,KAAK,OAAL,CAAa,mBAApB,KAA4C,SAAhD,EAA2D;MACzD,GAAG,CAAC,mBAAJ,GAA0B,KAAK,OAAL,CAAa,mBAAvC;IACD,CAbsC,CAevC;IACA;;;IACA,IAAI,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,MAAf,KAA0B,CAA1B,IAA+B,KAAK,OAAL,CAAa,OAAb,KAAyB,SAA5D,EAAuE;MACrE,GAAG,CAAC,OAAJ,GAAc,KAAK,OAAL,CAAa,OAA3B;IACD;;IAED,MAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,GAAtC,EAA2C,QAA3C;EACD;;AAlC8E;;AAAjF,OAAA,CAAA,sBAAA,GAAA,sBAAA;AAqCA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,sBAAd,EAAsC,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,EAAwB,WAAA,CAAA,MAAA,CAAO,SAA/B,CAAtC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ListDatabasesOperation = void 0;\nconst utils_1 = require(\"../utils\");\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass ListDatabasesOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.ns = new utils_1.MongoDBNamespace('admin', '$cmd');\n    }\n    execute(server, session, callback) {\n        const cmd = { listDatabases: 1 };\n        if (this.options.nameOnly) {\n            cmd.nameOnly = Number(cmd.nameOnly);\n        }\n        if (this.options.filter) {\n            cmd.filter = this.options.filter;\n        }\n        if (typeof this.options.authorizedDatabases === 'boolean') {\n            cmd.authorizedDatabases = this.options.authorizedDatabases;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if ((0, utils_1.maxWireVersion)(server) >= 9 && this.options.comment !== undefined) {\n            cmd.comment = this.options.comment;\n        }\n        super.executeCommand(server, session, cmd, callback);\n    }\n}\nexports.ListDatabasesOperation = ListDatabasesOperation;\n(0, operation_1.defineAspects)(ListDatabasesOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.RETRYABLE]);\n//# sourceMappingURL=list_databases.js.map"]},"metadata":{},"sourceType":"script"}