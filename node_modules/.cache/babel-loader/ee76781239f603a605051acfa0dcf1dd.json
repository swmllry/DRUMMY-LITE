{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.KillCursorsOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n  constructor(cursorId, ns, server, options) {\n    super(options);\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n    }\n\n    const killCursors = this.ns.collection;\n\n    if (killCursors == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n    }\n\n    const killCursorsCommand = {\n      killCursors,\n      cursors: [this.cursorId]\n    };\n    server.command(this.ns, killCursorsCommand, {\n      session\n    }, () => callback());\n  }\n\n}\n\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"sources":["../../src/operations/kill_cursors.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAIA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAYA,MAAa,oBAAb,SAA0C,WAAA,CAAA,iBAA1C,CAA2D;EAGzD,WAAA,CAAY,QAAZ,EAA4B,EAA5B,EAAkD,MAAlD,EAAkE,OAAlE,EAA2F;IACzF,MAAM,OAAN;IACA,KAAK,EAAL,GAAU,EAAV;IACA,KAAK,QAAL,GAAgB,QAAhB;IACA,KAAK,MAAL,GAAc,MAAd;EACD;;EAED,OAAO,CAAC,MAAD,EAAiB,OAAjB,EAAqD,QAArD,EAA6E;IAClF,IAAI,MAAM,KAAK,KAAK,MAApB,EAA4B;MAC1B,OAAO,QAAQ,CACb,IAAI,OAAA,CAAA,iBAAJ,CAAsB,2DAAtB,CADa,CAAf;IAGD;;IAED,MAAM,WAAW,GAAG,KAAK,EAAL,CAAQ,UAA5B;;IACA,IAAI,WAAW,IAAI,IAAnB,EAAyB;MACvB;MACA;MACA,OAAO,QAAQ,CACb,IAAI,OAAA,CAAA,iBAAJ,CAAsB,yDAAtB,CADa,CAAf;IAGD;;IAED,MAAM,kBAAkB,GAAuB;MAC7C,WAD6C;MAE7C,OAAO,EAAE,CAAC,KAAK,QAAN;IAFoC,CAA/C;IAKA,MAAM,CAAC,OAAP,CAAe,KAAK,EAApB,EAAwB,kBAAxB,EAA4C;MAAE;IAAF,CAA5C,EAAyD,MAAM,QAAQ,EAAvE;EACD;;AAhCwD;;AAA3D,OAAA,CAAA,oBAAA,GAAA,oBAAA;AAmCA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,oBAAd,EAAoC,CAAC,WAAA,CAAA,MAAA,CAAO,uBAAR,CAApC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KillCursorsOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\nclass KillCursorsOperation extends operation_1.AbstractOperation {\n    constructor(cursorId, ns, server, options) {\n        super(options);\n        this.ns = ns;\n        this.cursorId = cursorId;\n        this.server = server;\n    }\n    execute(server, session, callback) {\n        if (server !== this.server) {\n            return callback(new error_1.MongoRuntimeError('Killcursor must run on the same server operation began on'));\n        }\n        const killCursors = this.ns.collection;\n        if (killCursors == null) {\n            // Cursors should have adopted the namespace returned by MongoDB\n            // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n            return callback(new error_1.MongoRuntimeError('A collection name must be determined before killCursors'));\n        }\n        const killCursorsCommand = {\n            killCursors,\n            cursors: [this.cursorId]\n        };\n        server.command(this.ns, killCursorsCommand, { session }, () => callback());\n    }\n}\nexports.KillCursorsOperation = KillCursorsOperation;\n(0, operation_1.defineAspects)(KillCursorsOperation, [operation_1.Aspect.MUST_SELECT_SAME_SERVER]);\n//# sourceMappingURL=kill_cursors.js.map"]},"metadata":{},"sourceType":"script"}