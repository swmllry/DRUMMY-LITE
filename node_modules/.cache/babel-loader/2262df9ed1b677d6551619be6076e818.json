{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.X509 = void 0;\n\nconst error_1 = require(\"../../error\");\n\nconst utils_1 = require(\"../../utils\");\n\nconst auth_provider_1 = require(\"./auth_provider\");\n\nclass X509 extends auth_provider_1.AuthProvider {\n  prepare(handshakeDoc, authContext, callback) {\n    const {\n      credentials\n    } = authContext;\n\n    if (!credentials) {\n      return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n\n    Object.assign(handshakeDoc, {\n      speculativeAuthenticate: x509AuthenticateCommand(credentials)\n    });\n    callback(undefined, handshakeDoc);\n  }\n\n  auth(authContext, callback) {\n    const connection = authContext.connection;\n    const credentials = authContext.credentials;\n\n    if (!credentials) {\n      return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n    }\n\n    const response = authContext.response;\n\n    if (response && response.speculativeAuthenticate) {\n      return callback();\n    }\n\n    connection.command((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined, callback);\n  }\n\n}\n\nexports.X509 = X509;\n\nfunction x509AuthenticateCommand(credentials) {\n  const command = {\n    authenticate: 1,\n    mechanism: 'MONGODB-X509'\n  };\n\n  if (credentials.username) {\n    command.user = credentials.username;\n  }\n\n  return command;\n}","map":{"version":3,"sources":["../../../src/cmap/auth/x509.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,aAAA,CAAA;;AAEA,MAAA,eAAA,GAAA,OAAA,CAAA,iBAAA,CAAA;;AAGA,MAAa,IAAb,SAA0B,eAAA,CAAA,YAA1B,CAAsC;EAC3B,OAAO,CACd,YADc,EAEd,WAFc,EAGd,QAHc,EAGI;IAElB,MAAM;MAAE;IAAF,IAAkB,WAAxB;;IACA,IAAI,CAAC,WAAL,EAAkB;MAChB,OAAO,QAAQ,CAAC,IAAI,OAAA,CAAA,4BAAJ,CAAiC,uCAAjC,CAAD,CAAf;IACD;;IACD,MAAM,CAAC,MAAP,CAAc,YAAd,EAA4B;MAC1B,uBAAuB,EAAE,uBAAuB,CAAC,WAAD;IADtB,CAA5B;IAIA,QAAQ,CAAC,SAAD,EAAY,YAAZ,CAAR;EACD;;EAEQ,IAAI,CAAC,WAAD,EAA2B,QAA3B,EAA6C;IACxD,MAAM,UAAU,GAAG,WAAW,CAAC,UAA/B;IACA,MAAM,WAAW,GAAG,WAAW,CAAC,WAAhC;;IACA,IAAI,CAAC,WAAL,EAAkB;MAChB,OAAO,QAAQ,CAAC,IAAI,OAAA,CAAA,4BAAJ,CAAiC,uCAAjC,CAAD,CAAf;IACD;;IACD,MAAM,QAAQ,GAAG,WAAW,CAAC,QAA7B;;IAEA,IAAI,QAAQ,IAAI,QAAQ,CAAC,uBAAzB,EAAkD;MAChD,OAAO,QAAQ,EAAf;IACD;;IAED,UAAU,CAAC,OAAX,CACE,CAAA,GAAA,OAAA,CAAA,EAAA,EAAG,gBAAH,CADF,EAEE,uBAAuB,CAAC,WAAD,CAFzB,EAGE,SAHF,EAIE,QAJF;EAMD;;AAnCmC;;AAAtC,OAAA,CAAA,IAAA,GAAA,IAAA;;AAsCA,SAAS,uBAAT,CAAiC,WAAjC,EAA8D;EAC5D,MAAM,OAAO,GAAa;IAAE,YAAY,EAAE,CAAhB;IAAmB,SAAS,EAAE;EAA9B,CAA1B;;EACA,IAAI,WAAW,CAAC,QAAhB,EAA0B;IACxB,OAAO,CAAC,IAAR,GAAe,WAAW,CAAC,QAA3B;EACD;;EAED,OAAO,OAAP;AACD","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.X509 = void 0;\nconst error_1 = require(\"../../error\");\nconst utils_1 = require(\"../../utils\");\nconst auth_provider_1 = require(\"./auth_provider\");\nclass X509 extends auth_provider_1.AuthProvider {\n    prepare(handshakeDoc, authContext, callback) {\n        const { credentials } = authContext;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        Object.assign(handshakeDoc, {\n            speculativeAuthenticate: x509AuthenticateCommand(credentials)\n        });\n        callback(undefined, handshakeDoc);\n    }\n    auth(authContext, callback) {\n        const connection = authContext.connection;\n        const credentials = authContext.credentials;\n        if (!credentials) {\n            return callback(new error_1.MongoMissingCredentialsError('AuthContext must provide credentials.'));\n        }\n        const response = authContext.response;\n        if (response && response.speculativeAuthenticate) {\n            return callback();\n        }\n        connection.command((0, utils_1.ns)('$external.$cmd'), x509AuthenticateCommand(credentials), undefined, callback);\n    }\n}\nexports.X509 = X509;\nfunction x509AuthenticateCommand(credentials) {\n    const command = { authenticate: 1, mechanism: 'MONGODB-X509' };\n    if (credentials.username) {\n        command.user = credentials.username;\n    }\n    return command;\n}\n//# sourceMappingURL=x509.js.map"]},"metadata":{},"sourceType":"script"}