{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.ZStandard = exports.Kerberos = exports.PKG_VERSION = void 0;\n\nconst error_1 = require(\"./error\");\n\nconst utils_1 = require(\"./utils\");\n\nexports.PKG_VERSION = Symbol('kPkgVersion');\n\nfunction makeErrorModule(error) {\n  const props = error ? {\n    kModuleError: error\n  } : {};\n  return new Proxy(props, {\n    get: (_, key) => {\n      if (key === 'kModuleError') {\n        return error;\n      }\n\n      throw error;\n    },\n    set: () => {\n      throw error;\n    }\n  });\n}\n\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Kerberos = require('kerberos');\n} catch {} // eslint-disable-line\n\n\nexports.ZStandard = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `@mongodb-js/zstd` not found. Please install it to enable zstd compression'));\n\ntry {\n  exports.ZStandard = require('@mongodb-js/zstd');\n} catch {} // eslint-disable-line\n\n\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.Snappy = require('snappy');\n\n  try {\n    exports.Snappy[exports.PKG_VERSION] = (0, utils_1.parsePackageVersion)(require('snappy/package.json'));\n  } catch {} // eslint-disable-line\n\n} catch {} // eslint-disable-line\n\n\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' + ' Please install it to enable Stringprep Profile for User Names and Passwords'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.saslprep = require('saslprep');\n} catch {} // eslint-disable-line\n\n\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\n\ntry {\n  // Ensure you always wrap an optional require in the try block NODE-3199\n  exports.aws4 = require('aws4');\n} catch {} // eslint-disable-line\n\n/** @public */\n\n\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n  FatalError: 0,\n  Error: 1,\n  Warning: 2,\n  Info: 3,\n  Trace: 4\n});","map":{"version":3,"sources":["../src/deps.ts"],"names":[],"mappings":";;;;;;;AAGA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;AAEa,OAAA,CAAA,WAAA,GAAc,MAAM,CAAC,aAAD,CAApB;;AAEb,SAAS,eAAT,CAAyB,KAAzB,EAAmC;EACjC,MAAM,KAAK,GAAG,KAAK,GAAG;IAAE,YAAY,EAAE;EAAhB,CAAH,GAA6B,EAAhD;EACA,OAAO,IAAI,KAAJ,CAAU,KAAV,EAAiB;IACtB,GAAG,EAAE,CAAC,CAAD,EAAS,GAAT,KAAqB;MACxB,IAAI,GAAG,KAAK,cAAZ,EAA4B;QAC1B,OAAO,KAAP;MACD;;MACD,MAAM,KAAN;IACD,CANqB;IAOtB,GAAG,EAAE,MAAK;MACR,MAAM,KAAN;IACD;EATqB,CAAjB,CAAP;AAWD;;AAEU,OAAA,CAAA,QAAA,GACT,eAAe,CACb,IAAI,OAAA,CAAA,2BAAJ,CACE,2FADF,CADa,CADN;;AAOX,IAAI;EACF;EACA,OAAA,CAAA,QAAA,GAAW,OAAO,CAAC,UAAD,CAAlB;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;;AAwBA,OAAA,CAAA,SAAA,GACT,eAAe,CACb,IAAI,OAAA,CAAA,2BAAJ,CACE,4FADF,CADa,CADN;;AAOX,IAAI;EACF,OAAA,CAAA,SAAA,GAAY,OAAO,CAAC,kBAAD,CAAnB;AACD,CAFD,CAEE,MAAM,CAAE,C,CAAC;;;AAgCA,OAAA,CAAA,MAAA,GAAoE,eAAe,CAC5F,IAAI,OAAA,CAAA,2BAAJ,CACE,oFADF,CAD4F,CAAnF;;AAMX,IAAI;EACF;EACA,OAAA,CAAA,MAAA,GAAS,OAAO,CAAC,QAAD,CAAhB;;EACA,IAAI;IACD,OAAA,CAAA,MAAA,CAAe,OAAA,CAAA,WAAf,IAA8B,CAAA,GAAA,OAAA,CAAA,mBAAA,EAAoB,OAAO,CAAC,qBAAD,CAA3B,CAA9B;EACF,CAFD,CAEE,MAAM,CAAE,CALR,CAKS;;AACZ,CAND,CAME,MAAM,CAAE,C,CAAC;;;AAEA,OAAA,CAAA,QAAA,GACT,eAAe,CACb,IAAI,OAAA,CAAA,2BAAJ,CACE,0CACE,8EAFJ,CADa,CADN;;AAQX,IAAI;EACF;EACA,OAAA,CAAA,QAAA,GAAW,OAAO,CAAC,UAAD,CAAlB;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;;AA2CA,OAAA,CAAA,IAAA,GAA6D,eAAe,CACrF,IAAI,OAAA,CAAA,2BAAJ,CACE,kFADF,CADqF,CAA5E;;AAMX,IAAI;EACF;EACA,OAAA,CAAA,IAAA,GAAO,OAAO,CAAC,MAAD,CAAd;AACD,CAHD,CAGE,MAAM,CAAE,C,CAAC;;AAEX;;;AACa,OAAA,CAAA,yBAAA,GAA4B,MAAM,CAAC,MAAP,CAAc;EACrD,UAAU,EAAE,CADyC;EAErD,KAAK,EAAE,CAF8C;EAGrD,OAAO,EAAE,CAH4C;EAIrD,IAAI,EAAE,CAJ+C;EAKrD,KAAK,EAAE;AAL8C,CAAd,CAA5B","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AutoEncryptionLoggerLevel = exports.aws4 = exports.saslprep = exports.Snappy = exports.ZStandard = exports.Kerberos = exports.PKG_VERSION = void 0;\nconst error_1 = require(\"./error\");\nconst utils_1 = require(\"./utils\");\nexports.PKG_VERSION = Symbol('kPkgVersion');\nfunction makeErrorModule(error) {\n    const props = error ? { kModuleError: error } : {};\n    return new Proxy(props, {\n        get: (_, key) => {\n            if (key === 'kModuleError') {\n                return error;\n            }\n            throw error;\n        },\n        set: () => {\n            throw error;\n        }\n    });\n}\nexports.Kerberos = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `kerberos` not found. Please install it to enable kerberos authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Kerberos = require('kerberos');\n}\ncatch { } // eslint-disable-line\nexports.ZStandard = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `@mongodb-js/zstd` not found. Please install it to enable zstd compression'));\ntry {\n    exports.ZStandard = require('@mongodb-js/zstd');\n}\ncatch { } // eslint-disable-line\nexports.Snappy = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `snappy` not found. Please install it to enable snappy compression'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.Snappy = require('snappy');\n    try {\n        exports.Snappy[exports.PKG_VERSION] = (0, utils_1.parsePackageVersion)(require('snappy/package.json'));\n    }\n    catch { } // eslint-disable-line\n}\ncatch { } // eslint-disable-line\nexports.saslprep = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `saslprep` not found.' +\n    ' Please install it to enable Stringprep Profile for User Names and Passwords'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.saslprep = require('saslprep');\n}\ncatch { } // eslint-disable-line\nexports.aws4 = makeErrorModule(new error_1.MongoMissingDependencyError('Optional module `aws4` not found. Please install it to enable AWS authentication'));\ntry {\n    // Ensure you always wrap an optional require in the try block NODE-3199\n    exports.aws4 = require('aws4');\n}\ncatch { } // eslint-disable-line\n/** @public */\nexports.AutoEncryptionLoggerLevel = Object.freeze({\n    FatalError: 0,\n    Error: 1,\n    Warning: 2,\n    Info: 3,\n    Trace: 4\n});\n//# sourceMappingURL=deps.js.map"]},"metadata":{},"sourceType":"script"}