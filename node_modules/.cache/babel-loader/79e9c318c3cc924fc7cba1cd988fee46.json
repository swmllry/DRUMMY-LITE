{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetMoreOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst utils_1 = require(\"../utils\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass GetMoreOperation extends operation_1.AbstractOperation {\n  constructor(ns, cursorId, server) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(options);\n    this.options = options;\n    this.ns = ns;\n    this.cursorId = cursorId;\n    this.server = server;\n  }\n  /**\n   * Although there is a server already associated with the get more operation, the signature\n   * for execute passes a server so we will just use that one.\n   */\n\n\n  execute(server, session, callback) {\n    if (server !== this.server) {\n      return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n    }\n\n    const collection = this.ns.collection;\n\n    if (collection == null) {\n      // Cursors should have adopted the namespace returned by MongoDB\n      // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n      return callback(new error_1.MongoRuntimeError('A collection name must be determined before getMore'));\n    }\n\n    const getMoreCmd = {\n      getMore: this.cursorId,\n      collection\n    };\n\n    if (typeof this.options.batchSize === 'number') {\n      getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n    }\n\n    if (typeof this.options.maxAwaitTimeMS === 'number') {\n      getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n    } // we check for undefined specifically here to allow falsy values\n    // eslint-disable-next-line no-restricted-syntax\n\n\n    if (this.options.comment !== undefined && (0, utils_1.maxWireVersion)(server) >= 9) {\n      getMoreCmd.comment = this.options.comment;\n    }\n\n    const commandOptions = {\n      returnFieldSelector: null,\n      documentsReturnedIn: 'nextBatch',\n      ...this.options\n    };\n    server.command(this.ns, getMoreCmd, commandOptions, callback);\n  }\n\n}\n\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.MUST_SELECT_SAME_SERVER]);","map":{"version":3,"sources":["../../src/operations/get_more.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAGA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AA+BA;;;AACA,MAAa,gBAAb,SAAsC,WAAA,CAAA,iBAAtC,CAAuD;EAIrD,WAAA,CAAY,EAAZ,EAAkC,QAAlC,EAAkD,MAAlD,EAA8F;IAAA,IAA5B,OAA4B,uEAAF,EAAE;IAC5F,MAAM,OAAN;IAEA,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,EAAL,GAAU,EAAV;IACA,KAAK,QAAL,GAAgB,QAAhB;IACA,KAAK,MAAL,GAAc,MAAd;EACD;EAED;;;AAGG;;;EACM,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGc;IAE5B,IAAI,MAAM,KAAK,KAAK,MAApB,EAA4B;MAC1B,OAAO,QAAQ,CACb,IAAI,OAAA,CAAA,iBAAJ,CAAsB,wDAAtB,CADa,CAAf;IAGD;;IAED,MAAM,UAAU,GAAG,KAAK,EAAL,CAAQ,UAA3B;;IACA,IAAI,UAAU,IAAI,IAAlB,EAAwB;MACtB;MACA;MACA,OAAO,QAAQ,CAAC,IAAI,OAAA,CAAA,iBAAJ,CAAsB,qDAAtB,CAAD,CAAf;IACD;;IAED,MAAM,UAAU,GAAmB;MACjC,OAAO,EAAE,KAAK,QADmB;MAEjC;IAFiC,CAAnC;;IAKA,IAAI,OAAO,KAAK,OAAL,CAAa,SAApB,KAAkC,QAAtC,EAAgD;MAC9C,UAAU,CAAC,SAAX,GAAuB,IAAI,CAAC,GAAL,CAAS,KAAK,OAAL,CAAa,SAAtB,CAAvB;IACD;;IAED,IAAI,OAAO,KAAK,OAAL,CAAa,cAApB,KAAuC,QAA3C,EAAqD;MACnD,UAAU,CAAC,SAAX,GAAuB,KAAK,OAAL,CAAa,cAApC;IACD,CA1B2B,CA4B5B;IACA;;;IACA,IAAI,KAAK,OAAL,CAAa,OAAb,KAAyB,SAAzB,IAAsC,CAAA,GAAA,OAAA,CAAA,cAAA,EAAe,MAAf,KAA0B,CAApE,EAAuE;MACrE,UAAU,CAAC,OAAX,GAAqB,KAAK,OAAL,CAAa,OAAlC;IACD;;IAED,MAAM,cAAc,GAAG;MACrB,mBAAmB,EAAE,IADA;MAErB,mBAAmB,EAAE,WAFA;MAGrB,GAAG,KAAK;IAHa,CAAvB;IAMA,MAAM,CAAC,OAAP,CAAe,KAAK,EAApB,EAAwB,UAAxB,EAAoC,cAApC,EAAoD,QAApD;EACD;;AA7DoD;;AAAvD,OAAA,CAAA,gBAAA,GAAA,gBAAA;AAgEA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,gBAAd,EAAgC,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,EAAwB,WAAA,CAAA,MAAA,CAAO,uBAA/B,CAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GetMoreOperation = void 0;\nconst error_1 = require(\"../error\");\nconst utils_1 = require(\"../utils\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass GetMoreOperation extends operation_1.AbstractOperation {\n    constructor(ns, cursorId, server, options = {}) {\n        super(options);\n        this.options = options;\n        this.ns = ns;\n        this.cursorId = cursorId;\n        this.server = server;\n    }\n    /**\n     * Although there is a server already associated with the get more operation, the signature\n     * for execute passes a server so we will just use that one.\n     */\n    execute(server, session, callback) {\n        if (server !== this.server) {\n            return callback(new error_1.MongoRuntimeError('Getmore must run on the same server operation began on'));\n        }\n        const collection = this.ns.collection;\n        if (collection == null) {\n            // Cursors should have adopted the namespace returned by MongoDB\n            // which should always defined a collection name (even a pseudo one, ex. db.aggregate())\n            return callback(new error_1.MongoRuntimeError('A collection name must be determined before getMore'));\n        }\n        const getMoreCmd = {\n            getMore: this.cursorId,\n            collection\n        };\n        if (typeof this.options.batchSize === 'number') {\n            getMoreCmd.batchSize = Math.abs(this.options.batchSize);\n        }\n        if (typeof this.options.maxAwaitTimeMS === 'number') {\n            getMoreCmd.maxTimeMS = this.options.maxAwaitTimeMS;\n        }\n        // we check for undefined specifically here to allow falsy values\n        // eslint-disable-next-line no-restricted-syntax\n        if (this.options.comment !== undefined && (0, utils_1.maxWireVersion)(server) >= 9) {\n            getMoreCmd.comment = this.options.comment;\n        }\n        const commandOptions = {\n            returnFieldSelector: null,\n            documentsReturnedIn: 'nextBatch',\n            ...this.options\n        };\n        server.command(this.ns, getMoreCmd, commandOptions, callback);\n    }\n}\nexports.GetMoreOperation = GetMoreOperation;\n(0, operation_1.defineAspects)(GetMoreOperation, [operation_1.Aspect.READ_OPERATION, operation_1.Aspect.MUST_SELECT_SAME_SERVER]);\n//# sourceMappingURL=get_more.js.map"]},"metadata":{},"sourceType":"script"}