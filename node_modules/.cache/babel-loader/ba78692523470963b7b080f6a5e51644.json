{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.DbStatsOperation = exports.CollStatsOperation = void 0;\n\nconst command_1 = require(\"./command\");\n\nconst operation_1 = require(\"./operation\");\n/**\n * Get all the collection statistics.\n * @internal\n */\n\n\nclass CollStatsOperation extends command_1.CommandOperation {\n  /**\n   * Construct a Stats operation.\n   *\n   * @param collection - Collection instance\n   * @param options - Optional settings. See Collection.prototype.stats for a list of options.\n   */\n  constructor(collection, options) {\n    super(collection, options);\n    this.options = options !== null && options !== void 0 ? options : {};\n    this.collectionName = collection.collectionName;\n  }\n\n  execute(server, session, callback) {\n    const command = {\n      collStats: this.collectionName\n    };\n\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.CollStatsOperation = CollStatsOperation;\n/** @internal */\n\nclass DbStatsOperation extends command_1.CommandOperation {\n  constructor(db, options) {\n    super(db, options);\n    this.options = options;\n  }\n\n  execute(server, session, callback) {\n    const command = {\n      dbStats: true\n    };\n\n    if (this.options.scale != null) {\n      command.scale = this.options.scale;\n    }\n\n    super.executeCommand(server, session, command, callback);\n  }\n\n}\n\nexports.DbStatsOperation = DbStatsOperation;\n(0, operation_1.defineAspects)(CollStatsOperation, [operation_1.Aspect.READ_OPERATION]);\n(0, operation_1.defineAspects)(DbStatsOperation, [operation_1.Aspect.READ_OPERATION]);","map":{"version":3,"sources":["../../src/operations/stats.ts"],"names":[],"mappings":";;;;;;;AAMA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;;AACA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAQA;;;AAGG;;;AACH,MAAa,kBAAb,SAAwC,SAAA,CAAA,gBAAxC,CAAkE;EAIhE;;;;;AAKG;EACH,WAAA,CAAY,UAAZ,EAAoC,OAApC,EAA8D;IAC5D,MAAM,UAAN,EAAkB,OAAlB;IACA,KAAK,OAAL,GAAe,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAA,OAAA,GAAW,EAA1B;IACA,KAAK,cAAL,GAAsB,UAAU,CAAC,cAAjC;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGe;IAE7B,MAAM,OAAO,GAAa;MAAE,SAAS,EAAE,KAAK;IAAlB,CAA1B;;IACA,IAAI,KAAK,OAAL,CAAa,KAAb,IAAsB,IAA1B,EAAgC;MAC9B,OAAO,CAAC,KAAR,GAAgB,KAAK,OAAL,CAAa,KAA7B;IACD;;IAED,MAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,OAAtC,EAA+C,QAA/C;EACD;;AA3B+D;;AAAlE,OAAA,CAAA,kBAAA,GAAA,kBAAA;AAoCA;;AACA,MAAa,gBAAb,SAAsC,SAAA,CAAA,gBAAtC,CAAgE;EAG9D,WAAA,CAAY,EAAZ,EAAoB,OAApB,EAA2C;IACzC,MAAM,EAAN,EAAU,OAAV;IACA,KAAK,OAAL,GAAe,OAAf;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGc;IAE5B,MAAM,OAAO,GAAa;MAAE,OAAO,EAAE;IAAX,CAA1B;;IACA,IAAI,KAAK,OAAL,CAAa,KAAb,IAAsB,IAA1B,EAAgC;MAC9B,OAAO,CAAC,KAAR,GAAgB,KAAK,OAAL,CAAa,KAA7B;IACD;;IAED,MAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC,OAAtC,EAA+C,QAA/C;EACD;;AAnB6D;;AAAhE,OAAA,CAAA,gBAAA,GAAA,gBAAA;AAqNA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,kBAAd,EAAkC,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,CAAlC;AACA,CAAA,GAAA,WAAA,CAAA,aAAA,EAAc,gBAAd,EAAgC,CAAC,WAAA,CAAA,MAAA,CAAO,cAAR,CAAhC","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DbStatsOperation = exports.CollStatsOperation = void 0;\nconst command_1 = require(\"./command\");\nconst operation_1 = require(\"./operation\");\n/**\n * Get all the collection statistics.\n * @internal\n */\nclass CollStatsOperation extends command_1.CommandOperation {\n    /**\n     * Construct a Stats operation.\n     *\n     * @param collection - Collection instance\n     * @param options - Optional settings. See Collection.prototype.stats for a list of options.\n     */\n    constructor(collection, options) {\n        super(collection, options);\n        this.options = options !== null && options !== void 0 ? options : {};\n        this.collectionName = collection.collectionName;\n    }\n    execute(server, session, callback) {\n        const command = { collStats: this.collectionName };\n        if (this.options.scale != null) {\n            command.scale = this.options.scale;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.CollStatsOperation = CollStatsOperation;\n/** @internal */\nclass DbStatsOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options;\n    }\n    execute(server, session, callback) {\n        const command = { dbStats: true };\n        if (this.options.scale != null) {\n            command.scale = this.options.scale;\n        }\n        super.executeCommand(server, session, command, callback);\n    }\n}\nexports.DbStatsOperation = DbStatsOperation;\n(0, operation_1.defineAspects)(CollStatsOperation, [operation_1.Aspect.READ_OPERATION]);\n(0, operation_1.defineAspects)(DbStatsOperation, [operation_1.Aspect.READ_OPERATION]);\n//# sourceMappingURL=stats.js.map"]},"metadata":{},"sourceType":"script"}