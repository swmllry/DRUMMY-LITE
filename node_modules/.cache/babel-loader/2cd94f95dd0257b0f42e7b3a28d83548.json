{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CollectionsOperation = void 0;\n\nconst collection_1 = require(\"../collection\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass CollectionsOperation extends operation_1.AbstractOperation {\n  constructor(db, options) {\n    super(options);\n    this.options = options;\n    this.db = db;\n  }\n\n  execute(server, session, callback) {\n    const db = this.db; // Let's get the collection names\n\n    db.listCollections({}, { ...this.options,\n      nameOnly: true,\n      readPreference: this.readPreference,\n      session\n    }).toArray((err, documents) => {\n      if (err || !documents) return callback(err); // Filter collections removing any illegal ones\n\n      documents = documents.filter(doc => doc.name.indexOf('$') === -1); // Return the collection objects\n\n      callback(undefined, documents.map(d => {\n        return new collection_1.Collection(db, d.name, db.s.options);\n      }));\n    });\n  }\n\n}\n\nexports.CollectionsOperation = CollectionsOperation;","map":{"version":3,"sources":["../../src/operations/collections.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,YAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAKA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAMA;;;AACA,MAAa,oBAAb,SAA0C,WAAA,CAAA,iBAA1C,CAAyE;EAIvE,WAAA,CAAY,EAAZ,EAAoB,OAApB,EAA+C;IAC7C,MAAM,OAAN;IACA,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,EAAL,GAAU,EAAV;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGkB;IAEhC,MAAM,EAAE,GAAG,KAAK,EAAhB,CAFgC,CAIhC;;IACA,EAAE,CAAC,eAAH,CACE,EADF,EAEE,EAAE,GAAG,KAAK,OAAV;MAAmB,QAAQ,EAAE,IAA7B;MAAmC,cAAc,EAAE,KAAK,cAAxD;MAAwE;IAAxE,CAFF,EAGE,OAHF,CAGU,CAAC,GAAD,EAAM,SAAN,KAAmB;MAC3B,IAAI,GAAG,IAAI,CAAC,SAAZ,EAAuB,OAAO,QAAQ,CAAC,GAAD,CAAf,CADI,CAE3B;;MACA,SAAS,GAAG,SAAS,CAAC,MAAV,CAAiB,GAAG,IAAI,GAAG,CAAC,IAAJ,CAAS,OAAT,CAAiB,GAAjB,MAA0B,CAAC,CAAnD,CAAZ,CAH2B,CAK3B;;MACA,QAAQ,CACN,SADM,EAEN,SAAS,CAAC,GAAV,CAAc,CAAC,IAAG;QAChB,OAAO,IAAI,YAAA,CAAA,UAAJ,CAAe,EAAf,EAAmB,CAAC,CAAC,IAArB,EAA2B,EAAE,CAAC,CAAH,CAAK,OAAhC,CAAP;MACD,CAFD,CAFM,CAAR;IAMD,CAfD;EAgBD;;AAlCsE;;AAAzE,OAAA,CAAA,oBAAA,GAAA,oBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CollectionsOperation = void 0;\nconst collection_1 = require(\"../collection\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass CollectionsOperation extends operation_1.AbstractOperation {\n    constructor(db, options) {\n        super(options);\n        this.options = options;\n        this.db = db;\n    }\n    execute(server, session, callback) {\n        const db = this.db;\n        // Let's get the collection names\n        db.listCollections({}, { ...this.options, nameOnly: true, readPreference: this.readPreference, session }).toArray((err, documents) => {\n            if (err || !documents)\n                return callback(err);\n            // Filter collections removing any illegal ones\n            documents = documents.filter(doc => doc.name.indexOf('$') === -1);\n            // Return the collection objects\n            callback(undefined, documents.map(d => {\n                return new collection_1.Collection(db, d.name, db.s.options);\n            }));\n        });\n    }\n}\nexports.CollectionsOperation = CollectionsOperation;\n//# sourceMappingURL=collections.js.map"]},"metadata":{},"sourceType":"script"}