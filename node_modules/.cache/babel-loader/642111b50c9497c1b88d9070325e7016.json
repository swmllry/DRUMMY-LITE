{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.IsCappedOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst operation_1 = require(\"./operation\");\n/** @internal */\n\n\nclass IsCappedOperation extends operation_1.AbstractOperation {\n  constructor(collection, options) {\n    super(options);\n    this.options = options;\n    this.collection = collection;\n  }\n\n  execute(server, session, callback) {\n    const coll = this.collection;\n    coll.s.db.listCollections({\n      name: coll.collectionName\n    }, { ...this.options,\n      nameOnly: false,\n      readPreference: this.readPreference,\n      session\n    }).toArray((err, collections) => {\n      if (err || !collections) return callback(err);\n\n      if (collections.length === 0) {\n        // TODO(NODE-3485)\n        return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n      }\n\n      const collOptions = collections[0].options;\n      callback(undefined, !!(collOptions && collOptions.capped));\n    });\n  }\n\n}\n\nexports.IsCappedOperation = IsCappedOperation;","map":{"version":3,"sources":["../../src/operations/is_capped.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAIA,MAAA,WAAA,GAAA,OAAA,CAAA,aAAA,CAAA;AAEA;;;AACA,MAAa,iBAAb,SAAuC,WAAA,CAAA,iBAAvC,CAAiE;EAI/D,WAAA,CAAY,UAAZ,EAAoC,OAApC,EAA6D;IAC3D,MAAM,OAAN;IACA,KAAK,OAAL,GAAe,OAAf;IACA,KAAK,UAAL,GAAkB,UAAlB;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGa;IAE3B,MAAM,IAAI,GAAG,KAAK,UAAlB;IAEA,IAAI,CAAC,CAAL,CAAO,EAAP,CACG,eADH,CAEI;MAAE,IAAI,EAAE,IAAI,CAAC;IAAb,CAFJ,EAGI,EAAE,GAAG,KAAK,OAAV;MAAmB,QAAQ,EAAE,KAA7B;MAAoC,cAAc,EAAE,KAAK,cAAzD;MAAyE;IAAzE,CAHJ,EAKG,OALH,CAKW,CAAC,GAAD,EAAM,WAAN,KAAqB;MAC5B,IAAI,GAAG,IAAI,CAAC,WAAZ,EAAyB,OAAO,QAAQ,CAAC,GAAD,CAAf;;MACzB,IAAI,WAAW,CAAC,MAAZ,KAAuB,CAA3B,EAA8B;QAC5B;QACA,OAAO,QAAQ,CAAC,IAAI,OAAA,CAAA,aAAJ,CAAkB,cAAc,IAAI,CAAC,SAAS,YAA9C,CAAD,CAAf;MACD;;MAED,MAAM,WAAW,GAAG,WAAW,CAAC,CAAD,CAAX,CAAe,OAAnC;MACA,QAAQ,CAAC,SAAD,EAAY,CAAC,EAAE,WAAW,IAAI,WAAW,CAAC,MAA7B,CAAb,CAAR;IACD,CAdH;EAeD;;AAhC8D;;AAAjE,OAAA,CAAA,iBAAA,GAAA,iBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IsCappedOperation = void 0;\nconst error_1 = require(\"../error\");\nconst operation_1 = require(\"./operation\");\n/** @internal */\nclass IsCappedOperation extends operation_1.AbstractOperation {\n    constructor(collection, options) {\n        super(options);\n        this.options = options;\n        this.collection = collection;\n    }\n    execute(server, session, callback) {\n        const coll = this.collection;\n        coll.s.db\n            .listCollections({ name: coll.collectionName }, { ...this.options, nameOnly: false, readPreference: this.readPreference, session })\n            .toArray((err, collections) => {\n            if (err || !collections)\n                return callback(err);\n            if (collections.length === 0) {\n                // TODO(NODE-3485)\n                return callback(new error_1.MongoAPIError(`collection ${coll.namespace} not found`));\n            }\n            const collOptions = collections[0].options;\n            callback(undefined, !!(collOptions && collOptions.capped));\n        });\n    }\n}\nexports.IsCappedOperation = IsCappedOperation;\n//# sourceMappingURL=is_capped.js.map"]},"metadata":{},"sourceType":"script"}