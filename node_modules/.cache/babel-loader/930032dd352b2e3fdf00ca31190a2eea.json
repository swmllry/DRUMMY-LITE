{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explain = exports.ExplainVerbosity = void 0;\n\nconst error_1 = require(\"./error\");\n/** @public */\n\n\nexports.ExplainVerbosity = Object.freeze({\n  queryPlanner: 'queryPlanner',\n  queryPlannerExtended: 'queryPlannerExtended',\n  executionStats: 'executionStats',\n  allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\n\nclass Explain {\n  constructor(verbosity) {\n    if (typeof verbosity === 'boolean') {\n      this.verbosity = verbosity ? exports.ExplainVerbosity.allPlansExecution : exports.ExplainVerbosity.queryPlanner;\n    } else {\n      this.verbosity = verbosity;\n    }\n  }\n\n  static fromOptions(options) {\n    if ((options === null || options === void 0 ? void 0 : options.explain) == null) return;\n    const explain = options.explain;\n\n    if (typeof explain === 'boolean' || typeof explain === 'string') {\n      return new Explain(explain);\n    }\n\n    throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n  }\n\n}\n\nexports.Explain = Explain;","map":{"version":3,"sources":["../src/explain.ts"],"names":[],"mappings":";;;;;;;AAAA,MAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;AAEA;;;AACa,OAAA,CAAA,gBAAA,GAAmB,MAAM,CAAC,MAAP,CAAc;EAC5C,YAAY,EAAE,cAD8B;EAE5C,oBAAoB,EAAE,sBAFsB;EAG5C,cAAc,EAAE,gBAH4B;EAI5C,iBAAiB,EAAE;AAJyB,CAAd,CAAnB;AAwBb;;AACA,MAAa,OAAb,CAAoB;EAGlB,WAAA,CAAY,SAAZ,EAA2C;IACzC,IAAI,OAAO,SAAP,KAAqB,SAAzB,EAAoC;MAClC,KAAK,SAAL,GAAiB,SAAS,GACtB,OAAA,CAAA,gBAAA,CAAiB,iBADK,GAEtB,OAAA,CAAA,gBAAA,CAAiB,YAFrB;IAGD,CAJD,MAIO;MACL,KAAK,SAAL,GAAiB,SAAjB;IACD;EACF;;EAEiB,OAAX,WAAW,CAAC,OAAD,EAAyB;IACzC,IAAI,CAAA,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CAAE,OAAT,KAAoB,IAAxB,EAA8B;IAE9B,MAAM,OAAO,GAAG,OAAO,CAAC,OAAxB;;IACA,IAAI,OAAO,OAAP,KAAmB,SAAnB,IAAgC,OAAO,OAAP,KAAmB,QAAvD,EAAiE;MAC/D,OAAO,IAAI,OAAJ,CAAY,OAAZ,CAAP;IACD;;IAED,MAAM,IAAI,OAAA,CAAA,yBAAJ,CAA8B,+CAA9B,CAAN;EACD;;AAtBiB;;AAApB,OAAA,CAAA,OAAA,GAAA,OAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Explain = exports.ExplainVerbosity = void 0;\nconst error_1 = require(\"./error\");\n/** @public */\nexports.ExplainVerbosity = Object.freeze({\n    queryPlanner: 'queryPlanner',\n    queryPlannerExtended: 'queryPlannerExtended',\n    executionStats: 'executionStats',\n    allPlansExecution: 'allPlansExecution'\n});\n/** @internal */\nclass Explain {\n    constructor(verbosity) {\n        if (typeof verbosity === 'boolean') {\n            this.verbosity = verbosity\n                ? exports.ExplainVerbosity.allPlansExecution\n                : exports.ExplainVerbosity.queryPlanner;\n        }\n        else {\n            this.verbosity = verbosity;\n        }\n    }\n    static fromOptions(options) {\n        if ((options === null || options === void 0 ? void 0 : options.explain) == null)\n            return;\n        const explain = options.explain;\n        if (typeof explain === 'boolean' || typeof explain === 'string') {\n            return new Explain(explain);\n        }\n        throw new error_1.MongoInvalidArgumentError('Field \"explain\" must be a string or a boolean');\n    }\n}\nexports.Explain = Explain;\n//# sourceMappingURL=explain.js.map"]},"metadata":{},"sourceType":"script"}