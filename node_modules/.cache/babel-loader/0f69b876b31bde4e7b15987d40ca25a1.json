{"ast":null,"code":"var _jsxFileName = \"/Users/a4543721/Documents/Concordia-Bootcamps/DRUMMY - FINAL PROJECT/Drummy/client/src/components/kit/Button.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Button = _ref => {\n  let {\n    keyCode,\n    sample,\n    id,\n    url,\n    setDisplay,\n    audioContextState,\n    setCurrentSample,\n    audioRef,\n    isPlaying\n  } = _ref;\n  const drumSampleAudio = new Audio(`${process.env.REACT_APP_PATH_TO_FILES}${url}`);\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Label, {\n      children: sample.toUpperCase()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        // console.log(\"audioContextState.state BEFORE :\", audioContextState?.state)\n        if ((audioContextState === null || audioContextState === void 0 ? void 0 : audioContextState.state) === 'suspended') {\n          audioContextState.resume(); // console.log(\"audioContextState.state AFTER :\", audioContextState?.state)\n          // console.log('audioRef.current: ONCLICK', audioRef.current);\n\n          if (audioRef.current) {\n            audioRef.current.play();\n          }\n        }\n\n        if ((audioContextState === null || audioContextState === void 0 ? void 0 : audioContextState.state) === 'running') {\n          if (audioRef.current) {\n            audioRef.current.play();\n          }\n        }\n\n        console.log('isPlaying :', isPlaying);\n      },\n      children: \"START\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Button;\nexport default Button;\nconst Wrapper = styled.div`\n`;\n_c2 = Wrapper;\nconst Label = styled.p`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nfont-family: helvetica;\nfont-size: 10px;\nbackground-color: #c6c4bf;\nmargin: 0 4px 0 4px;\n\n`;\n_c3 = Label;\nconst Toggle = styled.button`\nmargin: 12px;\nbackground-color: #8a8886;\nheight: 40px;\nwidth: 60px;\nborder-radius: 4px;\n`;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Label\");","map":{"version":3,"names":["React","styled","Button","keyCode","sample","id","url","setDisplay","audioContextState","setCurrentSample","audioRef","isPlaying","drumSampleAudio","Audio","process","env","REACT_APP_PATH_TO_FILES","toUpperCase","state","resume","current","play","console","log","Wrapper","div","Label","p","Toggle","button"],"sources":["/Users/a4543721/Documents/Concordia-Bootcamps/DRUMMY - FINAL PROJECT/Drummy/client/src/components/kit/Button.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Button = ({ keyCode, sample, id, url, setDisplay, audioContextState, setCurrentSample, audioRef, isPlaying }) => {\n\n    const drumSampleAudio = new Audio(`${process.env.REACT_APP_PATH_TO_FILES}${url}`)\n\n    \n    return (\n\n        <Wrapper>\n\n            <Label>{sample.toUpperCase()}</Label>\n\n            <button onClick={() => {\n                // console.log(\"audioContextState.state BEFORE :\", audioContextState?.state)\n                if (audioContextState?.state === 'suspended') {\n                    audioContextState.resume();\n                    // console.log(\"audioContextState.state AFTER :\", audioContextState?.state)\n                    // console.log('audioRef.current: ONCLICK', audioRef.current);\n                    if (audioRef.current) {\n                        audioRef.current.play()\n                    }\n                }\n\n                if (audioContextState?.state === 'running') {\n                    if (audioRef.current) {\n                        audioRef.current.play()\n                    }\n                }\n                console.log('isPlaying :', isPlaying)\n            }}>\n                START\n            </button>\n            {/* <Toggle onClick={() => {\n                // actx.resume()\n                drumSampleAudio.play()\n                setDisplay(sample)\n                setCurrentSample(drumSampleAudio)\n            }} /> */}\n\n        </Wrapper>\n\n    )\n}\n\nexport default Button\n\nconst Wrapper = styled.div`\n`\nconst Label = styled.p`\ndisplay: flex;\nflex-direction: column;\njustify-content: center;\nalign-items: center;\nfont-family: helvetica;\nfont-size: 10px;\nbackground-color: #c6c4bf;\nmargin: 0 4px 0 4px;\n\n`\nconst Toggle = styled.button`\nmargin: 12px;\nbackground-color: #8a8886;\nheight: 40px;\nwidth: 60px;\nborder-radius: 4px;\n`"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,MAAMC,MAAM,GAAG,QAAwG;EAAA,IAAvG;IAAEC,OAAF;IAAWC,MAAX;IAAmBC,EAAnB;IAAuBC,GAAvB;IAA4BC,UAA5B;IAAwCC,iBAAxC;IAA2DC,gBAA3D;IAA6EC,QAA7E;IAAuFC;EAAvF,CAAuG;EAEnH,MAAMC,eAAe,GAAG,IAAIC,KAAJ,CAAW,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,GAAEV,GAAI,EAAvD,CAAxB;EAGA,oBAEI,QAAC,OAAD;IAAA,wBAEI,QAAC,KAAD;MAAA,UAAQF,MAAM,CAACa,WAAP;IAAR;MAAA;MAAA;MAAA;IAAA,QAFJ,eAII;MAAQ,OAAO,EAAE,MAAM;QACnB;QACA,IAAI,CAAAT,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEU,KAAnB,MAA6B,WAAjC,EAA8C;UAC1CV,iBAAiB,CAACW,MAAlB,GAD0C,CAE1C;UACA;;UACA,IAAIT,QAAQ,CAACU,OAAb,EAAsB;YAClBV,QAAQ,CAACU,OAAT,CAAiBC,IAAjB;UACH;QACJ;;QAED,IAAI,CAAAb,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEU,KAAnB,MAA6B,SAAjC,EAA4C;UACxC,IAAIR,QAAQ,CAACU,OAAb,EAAsB;YAClBV,QAAQ,CAACU,OAAT,CAAiBC,IAAjB;UACH;QACJ;;QACDC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BZ,SAA3B;MACH,CAjBD;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAJJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AAoCH,CAzCD;;KAAMT,M;AA2CN,eAAeA,MAAf;AAEA,MAAMsB,OAAO,GAAGvB,MAAM,CAACwB,GAAI;AAC3B,CADA;MAAMD,O;AAEN,MAAME,KAAK,GAAGzB,MAAM,CAAC0B,CAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMD,K;AAWN,MAAME,MAAM,GAAG3B,MAAM,CAAC4B,MAAO;AAC7B;AACA;AACA;AACA;AACA;AACA,CANA"},"metadata":{},"sourceType":"module"}