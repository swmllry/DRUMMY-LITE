{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProfilingLevelOperation = void 0;\n\nconst error_1 = require(\"../error\");\n\nconst command_1 = require(\"./command\");\n/** @internal */\n\n\nclass ProfilingLevelOperation extends command_1.CommandOperation {\n  constructor(db, options) {\n    super(db, options);\n    this.options = options;\n  }\n\n  execute(server, session, callback) {\n    super.executeCommand(server, session, {\n      profile: -1\n    }, (err, doc) => {\n      if (err == null && doc.ok === 1) {\n        const was = doc.was;\n        if (was === 0) return callback(undefined, 'off');\n        if (was === 1) return callback(undefined, 'slow_only');\n        if (was === 2) return callback(undefined, 'all'); // TODO(NODE-3483)\n\n        return callback(new error_1.MongoRuntimeError(`Illegal profiling level value ${was}`));\n      } else {\n        // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n        err != null ? callback(err) : callback(new error_1.MongoRuntimeError('Error with profile command'));\n      }\n    });\n  }\n\n}\n\nexports.ProfilingLevelOperation = ProfilingLevelOperation;","map":{"version":3,"sources":["../../src/operations/profiling_level.ts"],"names":[],"mappings":";;;;;;;AACA,MAAA,OAAA,GAAA,OAAA,CAAA,UAAA,CAAA;;AAIA,MAAA,SAAA,GAAA,OAAA,CAAA,WAAA,CAAA;AAKA;;;AACA,MAAa,uBAAb,SAA6C,SAAA,CAAA,gBAA7C,CAAqE;EAGnE,WAAA,CAAY,EAAZ,EAAoB,OAApB,EAAkD;IAChD,MAAM,EAAN,EAAU,OAAV;IACA,KAAK,OAAL,GAAe,OAAf;EACD;;EAEQ,OAAO,CACd,MADc,EAEd,OAFc,EAGd,QAHc,EAGY;IAE1B,MAAM,cAAN,CAAqB,MAArB,EAA6B,OAA7B,EAAsC;MAAE,OAAO,EAAE,CAAC;IAAZ,CAAtC,EAAuD,CAAC,GAAD,EAAM,GAAN,KAAa;MAClE,IAAI,GAAG,IAAI,IAAP,IAAe,GAAG,CAAC,EAAJ,KAAW,CAA9B,EAAiC;QAC/B,MAAM,GAAG,GAAG,GAAG,CAAC,GAAhB;QACA,IAAI,GAAG,KAAK,CAAZ,EAAe,OAAO,QAAQ,CAAC,SAAD,EAAY,KAAZ,CAAf;QACf,IAAI,GAAG,KAAK,CAAZ,EAAe,OAAO,QAAQ,CAAC,SAAD,EAAY,WAAZ,CAAf;QACf,IAAI,GAAG,KAAK,CAAZ,EAAe,OAAO,QAAQ,CAAC,SAAD,EAAY,KAAZ,CAAf,CAJgB,CAK/B;;QACA,OAAO,QAAQ,CAAC,IAAI,OAAA,CAAA,iBAAJ,CAAsB,iCAAiC,GAAG,EAA1D,CAAD,CAAf;MACD,CAPD,MAOO;QACL;QACA,GAAG,IAAI,IAAP,GAAc,QAAQ,CAAC,GAAD,CAAtB,GAA8B,QAAQ,CAAC,IAAI,OAAA,CAAA,iBAAJ,CAAsB,4BAAtB,CAAD,CAAtC;MACD;IACF,CAZD;EAaD;;AA1BkE;;AAArE,OAAA,CAAA,uBAAA,GAAA,uBAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProfilingLevelOperation = void 0;\nconst error_1 = require(\"../error\");\nconst command_1 = require(\"./command\");\n/** @internal */\nclass ProfilingLevelOperation extends command_1.CommandOperation {\n    constructor(db, options) {\n        super(db, options);\n        this.options = options;\n    }\n    execute(server, session, callback) {\n        super.executeCommand(server, session, { profile: -1 }, (err, doc) => {\n            if (err == null && doc.ok === 1) {\n                const was = doc.was;\n                if (was === 0)\n                    return callback(undefined, 'off');\n                if (was === 1)\n                    return callback(undefined, 'slow_only');\n                if (was === 2)\n                    return callback(undefined, 'all');\n                // TODO(NODE-3483)\n                return callback(new error_1.MongoRuntimeError(`Illegal profiling level value ${was}`));\n            }\n            else {\n                // TODO(NODE-3483): Consider MongoUnexpectedServerResponseError\n                err != null ? callback(err) : callback(new error_1.MongoRuntimeError('Error with profile command'));\n            }\n        });\n    }\n}\nexports.ProfilingLevelOperation = ProfilingLevelOperation;\n//# sourceMappingURL=profiling_level.js.map"]},"metadata":{},"sourceType":"script"}